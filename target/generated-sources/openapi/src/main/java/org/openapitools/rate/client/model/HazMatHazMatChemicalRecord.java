/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Container to hold HazMat Chemical Records.
 */
@ApiModel(description = "Container to hold HazMat Chemical Records.")
@JsonPropertyOrder({
  HazMatHazMatChemicalRecord.JSON_PROPERTY_CHEMICAL_RECORD_IDENTIFIER,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_CLASS_DIVISION_NUMBER,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_ID_NUMBER,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_TRANSPORTATION_MODE,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_REGULATION_SET,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_EMERGENCY_PHONE,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_EMERGENCY_CONTACT,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_REPORTABLE_QUANTITY,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_SUB_RISK_CLASS,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_PACKAGING_GROUP_TYPE,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_QUANTITY,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_U_O_M,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_PACKAGING_INSTRUCTION_CODE,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_PROPER_SHIPPING_NAME,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_TECHNICAL_NAME,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_ADDITIONAL_DESCRIPTION,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_PACKAGING_TYPE,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_HAZARD_LABEL_REQUIRED,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_PACKAGING_TYPE_QUANTITY,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_COMMODITY_REGULATED_LEVEL_CODE,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_TRANSPORT_CATEGORY,
  HazMatHazMatChemicalRecord.JSON_PROPERTY_TUNNEL_RESTRICTION_CODE
})
@JsonTypeName("HazMat_HazMatChemicalRecord")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class HazMatHazMatChemicalRecord {
  public static final String JSON_PROPERTY_CHEMICAL_RECORD_IDENTIFIER = "ChemicalRecordIdentifier";
  private String chemicalRecordIdentifier;

  public static final String JSON_PROPERTY_CLASS_DIVISION_NUMBER = "ClassDivisionNumber";
  private String classDivisionNumber;

  public static final String JSON_PROPERTY_ID_NUMBER = "IDNumber";
  private String idNumber;

  public static final String JSON_PROPERTY_TRANSPORTATION_MODE = "TransportationMode";
  private String transportationMode;

  public static final String JSON_PROPERTY_REGULATION_SET = "RegulationSet";
  private String regulationSet;

  public static final String JSON_PROPERTY_EMERGENCY_PHONE = "EmergencyPhone";
  private String emergencyPhone;

  public static final String JSON_PROPERTY_EMERGENCY_CONTACT = "EmergencyContact";
  private String emergencyContact;

  public static final String JSON_PROPERTY_REPORTABLE_QUANTITY = "ReportableQuantity";
  private String reportableQuantity;

  public static final String JSON_PROPERTY_SUB_RISK_CLASS = "SubRiskClass";
  private String subRiskClass;

  public static final String JSON_PROPERTY_PACKAGING_GROUP_TYPE = "PackagingGroupType";
  private String packagingGroupType;

  public static final String JSON_PROPERTY_QUANTITY = "Quantity";
  private String quantity;

  public static final String JSON_PROPERTY_U_O_M = "UOM";
  private String UOM;

  public static final String JSON_PROPERTY_PACKAGING_INSTRUCTION_CODE = "PackagingInstructionCode";
  private String packagingInstructionCode;

  public static final String JSON_PROPERTY_PROPER_SHIPPING_NAME = "ProperShippingName";
  private String properShippingName;

  public static final String JSON_PROPERTY_TECHNICAL_NAME = "TechnicalName";
  private String technicalName;

  public static final String JSON_PROPERTY_ADDITIONAL_DESCRIPTION = "AdditionalDescription";
  private String additionalDescription;

  public static final String JSON_PROPERTY_PACKAGING_TYPE = "PackagingType";
  private String packagingType;

  public static final String JSON_PROPERTY_HAZARD_LABEL_REQUIRED = "HazardLabelRequired";
  private String hazardLabelRequired;

  public static final String JSON_PROPERTY_PACKAGING_TYPE_QUANTITY = "PackagingTypeQuantity";
  private String packagingTypeQuantity;

  public static final String JSON_PROPERTY_COMMODITY_REGULATED_LEVEL_CODE = "CommodityRegulatedLevelCode";
  private String commodityRegulatedLevelCode;

  public static final String JSON_PROPERTY_TRANSPORT_CATEGORY = "TransportCategory";
  private String transportCategory;

  public static final String JSON_PROPERTY_TUNNEL_RESTRICTION_CODE = "TunnelRestrictionCode";
  private String tunnelRestrictionCode;

  public HazMatHazMatChemicalRecord() {
  }

  public HazMatHazMatChemicalRecord chemicalRecordIdentifier(String chemicalRecordIdentifier) {
    
    this.chemicalRecordIdentifier = chemicalRecordIdentifier;
    return this;
  }

   /**
   * Identifies the Chemcial Record.  Required if SubVersion is greater than or equal to 1701.
   * @return chemicalRecordIdentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the Chemcial Record.  Required if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_CHEMICAL_RECORD_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChemicalRecordIdentifier() {
    return chemicalRecordIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_CHEMICAL_RECORD_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChemicalRecordIdentifier(String chemicalRecordIdentifier) {
    this.chemicalRecordIdentifier = chemicalRecordIdentifier;
  }


  public HazMatHazMatChemicalRecord classDivisionNumber(String classDivisionNumber) {
    
    this.classDivisionNumber = classDivisionNumber;
    return this;
  }

   /**
   * This is the hazard class associated to the specified commodity. Required if CommodityRegulatedLevelCode is �LQ� or �FR�  Applies only if SubVersion is greater than or equal to 1701.
   * @return classDivisionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the hazard class associated to the specified commodity. Required if CommodityRegulatedLevelCode is �LQ� or �FR�  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_CLASS_DIVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClassDivisionNumber() {
    return classDivisionNumber;
  }


  @JsonProperty(JSON_PROPERTY_CLASS_DIVISION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClassDivisionNumber(String classDivisionNumber) {
    this.classDivisionNumber = classDivisionNumber;
  }


  public HazMatHazMatChemicalRecord idNumber(String idNumber) {
    
    this.idNumber = idNumber;
    return this;
  }

   /**
   * This is the ID number (UN/NA/ID) for the specified commodity. Required if CommodityRegulatedLevelCode &#x3D; LR, LQ or FR and if the field applies to the material by regulation. UN/NA/ID Identification Number assigned to the specified regulated good. (Include the UN/NA/ID as part of the entry).  Applies only if SubVersion is greater than or equal to 1701.
   * @return idNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the ID number (UN/NA/ID) for the specified commodity. Required if CommodityRegulatedLevelCode = LR, LQ or FR and if the field applies to the material by regulation. UN/NA/ID Identification Number assigned to the specified regulated good. (Include the UN/NA/ID as part of the entry).  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_ID_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdNumber() {
    return idNumber;
  }


  @JsonProperty(JSON_PROPERTY_ID_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdNumber(String idNumber) {
    this.idNumber = idNumber;
  }


  public HazMatHazMatChemicalRecord transportationMode(String transportationMode) {
    
    this.transportationMode = transportationMode;
    return this;
  }

   /**
   * The method of transport by which a shipment is approved to move and the regulations associated with that method.  Only required when the CommodityRegulatedLevelCode is FR or LQ. Valid values:  01 - Highway 02 - Ground 03 - Passenger Aircraft 04 - Cargo Aircraft Only  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package having different TransportationMode, TransportationMode of first ChemicalRecord would be considered for validating and rating the package. All TransportationMode except for &#39;04&#39; are general service offering. If any chemical record contains &#39;04&#39; as TransportationMode, ShipperNumber needs to be authorized to use &#39;04&#39; as TransportationMode.
   * @return transportationMode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The method of transport by which a shipment is approved to move and the regulations associated with that method.  Only required when the CommodityRegulatedLevelCode is FR or LQ. Valid values:  01 - Highway 02 - Ground 03 - Passenger Aircraft 04 - Cargo Aircraft Only  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package having different TransportationMode, TransportationMode of first ChemicalRecord would be considered for validating and rating the package. All TransportationMode except for '04' are general service offering. If any chemical record contains '04' as TransportationMode, ShipperNumber needs to be authorized to use '04' as TransportationMode.")
  @JsonProperty(JSON_PROPERTY_TRANSPORTATION_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransportationMode() {
    return transportationMode;
  }


  @JsonProperty(JSON_PROPERTY_TRANSPORTATION_MODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransportationMode(String transportationMode) {
    this.transportationMode = transportationMode;
  }


  public HazMatHazMatChemicalRecord regulationSet(String regulationSet) {
    
    this.regulationSet = regulationSet;
    return this;
  }

   /**
   * The Regulatory set associated with every regulated shipment. It must be the same across the shipment.  Valid values:    ADR -  For Europe to Europe Ground Movement  CFR -  For HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada,  IATA -  For Worldwide Air movement  TDG -  For Canada to Canada ground movement or Canada to U.S. standard movement  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package or multiple packages containing different RegulationSet, RegulationSet of first ChemicalRecord would be considered for validating and rating the entire shipment.
   * @return regulationSet
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The Regulatory set associated with every regulated shipment. It must be the same across the shipment.  Valid values:    ADR -  For Europe to Europe Ground Movement  CFR -  For HazMat regulated by US Dept. of Transportation within the U.S. or ground shipments to Canada,  IATA -  For Worldwide Air movement  TDG -  For Canada to Canada ground movement or Canada to U.S. standard movement  Applies only if SubVersion is greater than or equal to 1701. For multiple ChemicalRecords per package or multiple packages containing different RegulationSet, RegulationSet of first ChemicalRecord would be considered for validating and rating the entire shipment.")
  @JsonProperty(JSON_PROPERTY_REGULATION_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegulationSet() {
    return regulationSet;
  }


  @JsonProperty(JSON_PROPERTY_REGULATION_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegulationSet(String regulationSet) {
    this.regulationSet = regulationSet;
  }


  public HazMatHazMatChemicalRecord emergencyPhone(String emergencyPhone) {
    
    this.emergencyPhone = emergencyPhone;
    return this;
  }

   /**
   * 24 Hour Emergency Phone Number of the shipper.  Valid values for this field are (0) through (9) with trailing blanks. For numbers within the U.S., the layout is &#39;1&#39;, area code, 7-digit number. For all other countries or territories the layout is country or territory code, area code, number.  Applies only if SubVersion is greater than or equal to 1701.
   * @return emergencyPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "24 Hour Emergency Phone Number of the shipper.  Valid values for this field are (0) through (9) with trailing blanks. For numbers within the U.S., the layout is '1', area code, 7-digit number. For all other countries or territories the layout is country or territory code, area code, number.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_EMERGENCY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmergencyPhone() {
    return emergencyPhone;
  }


  @JsonProperty(JSON_PROPERTY_EMERGENCY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmergencyPhone(String emergencyPhone) {
    this.emergencyPhone = emergencyPhone;
  }


  public HazMatHazMatChemicalRecord emergencyContact(String emergencyContact) {
    
    this.emergencyContact = emergencyContact;
    return this;
  }

   /**
   * The emergency information, contact name and/or contact number, required to be communicated when a call is placed to the EmergencyPhoneNumber. The information is required if there is a value in the EmergencyPhoneNumber field above and the shipment is with a US50 or PR origin and/or destination and the RegulationSet is IATA.  Applies only if SubVersion is greater than or equal to 1701.
   * @return emergencyContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The emergency information, contact name and/or contact number, required to be communicated when a call is placed to the EmergencyPhoneNumber. The information is required if there is a value in the EmergencyPhoneNumber field above and the shipment is with a US50 or PR origin and/or destination and the RegulationSet is IATA.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_EMERGENCY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmergencyContact() {
    return emergencyContact;
  }


  @JsonProperty(JSON_PROPERTY_EMERGENCY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmergencyContact(String emergencyContact) {
    this.emergencyContact = emergencyContact;
  }


  public HazMatHazMatChemicalRecord reportableQuantity(String reportableQuantity) {
    
    this.reportableQuantity = reportableQuantity;
    return this;
  }

   /**
   * Required if CommodityRegulatedLevelCode &#x3D; LQ or FR and if the field applies to the material by regulation. If reportable quantity is met, &#39;RQ&#39; should be entered.  Applies only if SubVersion is greater than or equal to 1701.
   * @return reportableQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. If reportable quantity is met, 'RQ' should be entered.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_REPORTABLE_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReportableQuantity() {
    return reportableQuantity;
  }


  @JsonProperty(JSON_PROPERTY_REPORTABLE_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportableQuantity(String reportableQuantity) {
    this.reportableQuantity = reportableQuantity;
  }


  public HazMatHazMatChemicalRecord subRiskClass(String subRiskClass) {
    
    this.subRiskClass = subRiskClass;
    return this;
  }

   /**
   * Required if CommodityRegulatedLevelCode &#x3D; LQ or FR and if the field applies to the material by regulation. Secondary hazardous characteristics of a package. (There can be more than one � separate each with a comma).  Applies only if SubVersion is greater than or equal to 1701.
   * @return subRiskClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Secondary hazardous characteristics of a package. (There can be more than one � separate each with a comma).  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_SUB_RISK_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubRiskClass() {
    return subRiskClass;
  }


  @JsonProperty(JSON_PROPERTY_SUB_RISK_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubRiskClass(String subRiskClass) {
    this.subRiskClass = subRiskClass;
  }


  public HazMatHazMatChemicalRecord packagingGroupType(String packagingGroupType) {
    
    this.packagingGroupType = packagingGroupType;
    return this;
  }

   /**
   * This is the packing group category associated to the specified commodity. Required if CommodityRegulatedLevelCode &#x3D; LQ or FR and if the field applies to the material by regulation. Must be shown in Roman Numerals. Valid values are: I,  II, III, blank.   Applies only if SubVersion is greater than or equal to 1701.
   * @return packagingGroupType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the packing group category associated to the specified commodity. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation. Must be shown in Roman Numerals. Valid values are: I,  II, III, blank.   Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_PACKAGING_GROUP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPackagingGroupType() {
    return packagingGroupType;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGING_GROUP_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackagingGroupType(String packagingGroupType) {
    this.packagingGroupType = packagingGroupType;
  }


  public HazMatHazMatChemicalRecord quantity(String quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Required if CommodityRegulatedLevelCode &#x3D; LQ or FR. The numerical value of the mass capacity of the regulated good.  Applies only if SubVersion is greater than or equal to 1701.
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required if CommodityRegulatedLevelCode = LQ or FR. The numerical value of the mass capacity of the regulated good.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }


  public HazMatHazMatChemicalRecord UOM(String UOM) {
    
    this.UOM = UOM;
    return this;
  }

   /**
   * Required if CommodityRegulatedLevelCode &#x3D; LQ or FR. The unit of measure used for the mass capacity of the regulated good. For Example: ml, L, g, mg, kg, cylinder, pound, pint, quart, gallon, ounce etc.  Applies only if SubVersion is greater than or equal to 1701.
   * @return UOM
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Required if CommodityRegulatedLevelCode = LQ or FR. The unit of measure used for the mass capacity of the regulated good. For Example: ml, L, g, mg, kg, cylinder, pound, pint, quart, gallon, ounce etc.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_U_O_M)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUOM() {
    return UOM;
  }


  @JsonProperty(JSON_PROPERTY_U_O_M)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUOM(String UOM) {
    this.UOM = UOM;
  }


  public HazMatHazMatChemicalRecord packagingInstructionCode(String packagingInstructionCode) {
    
    this.packagingInstructionCode = packagingInstructionCode;
    return this;
  }

   /**
   * The packing instructions related to the chemical record. Required if CommodityRegulatedLevelCode &#x3D; LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.
   * @return packagingInstructionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The packing instructions related to the chemical record. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_PACKAGING_INSTRUCTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPackagingInstructionCode() {
    return packagingInstructionCode;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGING_INSTRUCTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackagingInstructionCode(String packagingInstructionCode) {
    this.packagingInstructionCode = packagingInstructionCode;
  }


  public HazMatHazMatChemicalRecord properShippingName(String properShippingName) {
    
    this.properShippingName = properShippingName;
    return this;
  }

   /**
   * The Proper Shipping Name assigned by ADR, CFR or IATA. Required if CommodityRegulatedLevelCode &#x3D; LR, LQ or FR.  Applies only if SubVersion is greater than or equal to 1701.
   * @return properShippingName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Proper Shipping Name assigned by ADR, CFR or IATA. Required if CommodityRegulatedLevelCode = LR, LQ or FR.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_PROPER_SHIPPING_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProperShippingName() {
    return properShippingName;
  }


  @JsonProperty(JSON_PROPERTY_PROPER_SHIPPING_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperShippingName(String properShippingName) {
    this.properShippingName = properShippingName;
  }


  public HazMatHazMatChemicalRecord technicalName(String technicalName) {
    
    this.technicalName = technicalName;
    return this;
  }

   /**
   * The technical name (when required) for the specified commodity. Required if CommodityRegulatedLevelCode &#x3D; LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.
   * @return technicalName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The technical name (when required) for the specified commodity. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_TECHNICAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTechnicalName() {
    return technicalName;
  }


  @JsonProperty(JSON_PROPERTY_TECHNICAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTechnicalName(String technicalName) {
    this.technicalName = technicalName;
  }


  public HazMatHazMatChemicalRecord additionalDescription(String additionalDescription) {
    
    this.additionalDescription = additionalDescription;
    return this;
  }

   /**
   * Additional remarks or special provision information. Required if CommodityRegulatedLevelCode &#x3D; LQ or FR and if the field applies to the material by regulation.  Additional information that may be required by regulation about a hazardous material, such as, �Limited Quantity�, DOT-SP numbers, EX numbers.  Applies only if SubVersion is greater than or equal to 1701.
   * @return additionalDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional remarks or special provision information. Required if CommodityRegulatedLevelCode = LQ or FR and if the field applies to the material by regulation.  Additional information that may be required by regulation about a hazardous material, such as, �Limited Quantity�, DOT-SP numbers, EX numbers.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalDescription() {
    return additionalDescription;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalDescription(String additionalDescription) {
    this.additionalDescription = additionalDescription;
  }


  public HazMatHazMatChemicalRecord packagingType(String packagingType) {
    
    this.packagingType = packagingType;
    return this;
  }

   /**
   * The package type code identifying the type of packaging used for the commodity. (Ex: Fiberboard Box). Required if CommodityRegulatedLevelCode &#x3D; LQ or FR.   Applies only if SubVersion is greater than or equal to 1701.
   * @return packagingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The package type code identifying the type of packaging used for the commodity. (Ex: Fiberboard Box). Required if CommodityRegulatedLevelCode = LQ or FR.   Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_PACKAGING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPackagingType() {
    return packagingType;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackagingType(String packagingType) {
    this.packagingType = packagingType;
  }


  public HazMatHazMatChemicalRecord hazardLabelRequired(String hazardLabelRequired) {
    
    this.hazardLabelRequired = hazardLabelRequired;
    return this;
  }

   /**
   * Defines the type of label that is required on the package for the commodity. Not applicable if CommodityRegulatedLevelCode &#x3D; LR or EQ.  Applies only if SubVersion is greater than or equal to 1701.
   * @return hazardLabelRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines the type of label that is required on the package for the commodity. Not applicable if CommodityRegulatedLevelCode = LR or EQ.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_HAZARD_LABEL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHazardLabelRequired() {
    return hazardLabelRequired;
  }


  @JsonProperty(JSON_PROPERTY_HAZARD_LABEL_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHazardLabelRequired(String hazardLabelRequired) {
    this.hazardLabelRequired = hazardLabelRequired;
  }


  public HazMatHazMatChemicalRecord packagingTypeQuantity(String packagingTypeQuantity) {
    
    this.packagingTypeQuantity = packagingTypeQuantity;
    return this;
  }

   /**
   * The number of pieces of the specific commodity. Required if CommodityRegulatedLevelCode &#x3D; LQ or FR. Valid values are 1 to 999.  Applies only if SubVersion is greater than or equal to 1701.
   * @return packagingTypeQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The number of pieces of the specific commodity. Required if CommodityRegulatedLevelCode = LQ or FR. Valid values are 1 to 999.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_PACKAGING_TYPE_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPackagingTypeQuantity() {
    return packagingTypeQuantity;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGING_TYPE_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackagingTypeQuantity(String packagingTypeQuantity) {
    this.packagingTypeQuantity = packagingTypeQuantity;
  }


  public HazMatHazMatChemicalRecord commodityRegulatedLevelCode(String commodityRegulatedLevelCode) {
    
    this.commodityRegulatedLevelCode = commodityRegulatedLevelCode;
    return this;
  }

   /**
   * Indicates the type of commodity - Fully Regulated (FR), Limited Quantity (LQ), Excepted Quantity (EQ), Lightly Regulated (LR). Default value is FR. Valid values are  LR,  FR,  LQ,  EQ.   Applies only if SubVersion is greater than or equal to 1701.
   * @return commodityRegulatedLevelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates the type of commodity - Fully Regulated (FR), Limited Quantity (LQ), Excepted Quantity (EQ), Lightly Regulated (LR). Default value is FR. Valid values are  LR,  FR,  LQ,  EQ.   Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_COMMODITY_REGULATED_LEVEL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommodityRegulatedLevelCode() {
    return commodityRegulatedLevelCode;
  }


  @JsonProperty(JSON_PROPERTY_COMMODITY_REGULATED_LEVEL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommodityRegulatedLevelCode(String commodityRegulatedLevelCode) {
    this.commodityRegulatedLevelCode = commodityRegulatedLevelCode;
  }


  public HazMatHazMatChemicalRecord transportCategory(String transportCategory) {
    
    this.transportCategory = transportCategory;
    return this;
  }

   /**
   * Transport Category. Valid values are 0 to 4.  Applies only if SubVersion is greater than or equal to 1701.
   * @return transportCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Transport Category. Valid values are 0 to 4.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_TRANSPORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransportCategory() {
    return transportCategory;
  }


  @JsonProperty(JSON_PROPERTY_TRANSPORT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransportCategory(String transportCategory) {
    this.transportCategory = transportCategory;
  }


  public HazMatHazMatChemicalRecord tunnelRestrictionCode(String tunnelRestrictionCode) {
    
    this.tunnelRestrictionCode = tunnelRestrictionCode;
    return this;
  }

   /**
   * Defines what is restricted to pass through a tunnel.  Applies only if SubVersion is greater than or equal to 1701.
   * @return tunnelRestrictionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Defines what is restricted to pass through a tunnel.  Applies only if SubVersion is greater than or equal to 1701.")
  @JsonProperty(JSON_PROPERTY_TUNNEL_RESTRICTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTunnelRestrictionCode() {
    return tunnelRestrictionCode;
  }


  @JsonProperty(JSON_PROPERTY_TUNNEL_RESTRICTION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTunnelRestrictionCode(String tunnelRestrictionCode) {
    this.tunnelRestrictionCode = tunnelRestrictionCode;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HazMatHazMatChemicalRecord hazMatHazMatChemicalRecord = (HazMatHazMatChemicalRecord) o;
    return Objects.equals(this.chemicalRecordIdentifier, hazMatHazMatChemicalRecord.chemicalRecordIdentifier) &&
        Objects.equals(this.classDivisionNumber, hazMatHazMatChemicalRecord.classDivisionNumber) &&
        Objects.equals(this.idNumber, hazMatHazMatChemicalRecord.idNumber) &&
        Objects.equals(this.transportationMode, hazMatHazMatChemicalRecord.transportationMode) &&
        Objects.equals(this.regulationSet, hazMatHazMatChemicalRecord.regulationSet) &&
        Objects.equals(this.emergencyPhone, hazMatHazMatChemicalRecord.emergencyPhone) &&
        Objects.equals(this.emergencyContact, hazMatHazMatChemicalRecord.emergencyContact) &&
        Objects.equals(this.reportableQuantity, hazMatHazMatChemicalRecord.reportableQuantity) &&
        Objects.equals(this.subRiskClass, hazMatHazMatChemicalRecord.subRiskClass) &&
        Objects.equals(this.packagingGroupType, hazMatHazMatChemicalRecord.packagingGroupType) &&
        Objects.equals(this.quantity, hazMatHazMatChemicalRecord.quantity) &&
        Objects.equals(this.UOM, hazMatHazMatChemicalRecord.UOM) &&
        Objects.equals(this.packagingInstructionCode, hazMatHazMatChemicalRecord.packagingInstructionCode) &&
        Objects.equals(this.properShippingName, hazMatHazMatChemicalRecord.properShippingName) &&
        Objects.equals(this.technicalName, hazMatHazMatChemicalRecord.technicalName) &&
        Objects.equals(this.additionalDescription, hazMatHazMatChemicalRecord.additionalDescription) &&
        Objects.equals(this.packagingType, hazMatHazMatChemicalRecord.packagingType) &&
        Objects.equals(this.hazardLabelRequired, hazMatHazMatChemicalRecord.hazardLabelRequired) &&
        Objects.equals(this.packagingTypeQuantity, hazMatHazMatChemicalRecord.packagingTypeQuantity) &&
        Objects.equals(this.commodityRegulatedLevelCode, hazMatHazMatChemicalRecord.commodityRegulatedLevelCode) &&
        Objects.equals(this.transportCategory, hazMatHazMatChemicalRecord.transportCategory) &&
        Objects.equals(this.tunnelRestrictionCode, hazMatHazMatChemicalRecord.tunnelRestrictionCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chemicalRecordIdentifier, classDivisionNumber, idNumber, transportationMode, regulationSet, emergencyPhone, emergencyContact, reportableQuantity, subRiskClass, packagingGroupType, quantity, UOM, packagingInstructionCode, properShippingName, technicalName, additionalDescription, packagingType, hazardLabelRequired, packagingTypeQuantity, commodityRegulatedLevelCode, transportCategory, tunnelRestrictionCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HazMatHazMatChemicalRecord {\n");
    sb.append("    chemicalRecordIdentifier: ").append(toIndentedString(chemicalRecordIdentifier)).append("\n");
    sb.append("    classDivisionNumber: ").append(toIndentedString(classDivisionNumber)).append("\n");
    sb.append("    idNumber: ").append(toIndentedString(idNumber)).append("\n");
    sb.append("    transportationMode: ").append(toIndentedString(transportationMode)).append("\n");
    sb.append("    regulationSet: ").append(toIndentedString(regulationSet)).append("\n");
    sb.append("    emergencyPhone: ").append(toIndentedString(emergencyPhone)).append("\n");
    sb.append("    emergencyContact: ").append(toIndentedString(emergencyContact)).append("\n");
    sb.append("    reportableQuantity: ").append(toIndentedString(reportableQuantity)).append("\n");
    sb.append("    subRiskClass: ").append(toIndentedString(subRiskClass)).append("\n");
    sb.append("    packagingGroupType: ").append(toIndentedString(packagingGroupType)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    UOM: ").append(toIndentedString(UOM)).append("\n");
    sb.append("    packagingInstructionCode: ").append(toIndentedString(packagingInstructionCode)).append("\n");
    sb.append("    properShippingName: ").append(toIndentedString(properShippingName)).append("\n");
    sb.append("    technicalName: ").append(toIndentedString(technicalName)).append("\n");
    sb.append("    additionalDescription: ").append(toIndentedString(additionalDescription)).append("\n");
    sb.append("    packagingType: ").append(toIndentedString(packagingType)).append("\n");
    sb.append("    hazardLabelRequired: ").append(toIndentedString(hazardLabelRequired)).append("\n");
    sb.append("    packagingTypeQuantity: ").append(toIndentedString(packagingTypeQuantity)).append("\n");
    sb.append("    commodityRegulatedLevelCode: ").append(toIndentedString(commodityRegulatedLevelCode)).append("\n");
    sb.append("    transportCategory: ").append(toIndentedString(transportCategory)).append("\n");
    sb.append("    tunnelRestrictionCode: ").append(toIndentedString(tunnelRestrictionCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

