/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.DryIceDryIceWeight;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Container to hold Dry Ice information.  Lane check will happen based on postal code/ city.
 */
@ApiModel(description = "Container to hold Dry Ice information.  Lane check will happen based on postal code/ city.")
@JsonPropertyOrder({
  PackageServiceOptionsDryIce.JSON_PROPERTY_REGULATION_SET,
  PackageServiceOptionsDryIce.JSON_PROPERTY_DRY_ICE_WEIGHT,
  PackageServiceOptionsDryIce.JSON_PROPERTY_MEDICAL_USE_INDICATOR,
  PackageServiceOptionsDryIce.JSON_PROPERTY_AUDIT_REQUIRED
})
@JsonTypeName("PackageServiceOptions_DryIce")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class PackageServiceOptionsDryIce {
  public static final String JSON_PROPERTY_REGULATION_SET = "RegulationSet";
  private String regulationSet;

  public static final String JSON_PROPERTY_DRY_ICE_WEIGHT = "DryIceWeight";
  private DryIceDryIceWeight dryIceWeight;

  public static final String JSON_PROPERTY_MEDICAL_USE_INDICATOR = "MedicalUseIndicator";
  private String medicalUseIndicator;

  public static final String JSON_PROPERTY_AUDIT_REQUIRED = "AuditRequired";
  private String auditRequired;

  public PackageServiceOptionsDryIce() {
  }

  public PackageServiceOptionsDryIce regulationSet(String regulationSet) {
    
    this.regulationSet = regulationSet;
    return this;
  }

   /**
   * Regulation set for DryIce Shipment.  Valid values:  CFR &#x3D; For HazMat regulated by US Dept of Transportation within the U.S. or ground shipments to Canada, IATA &#x3D; For Worldwide Air movement.   The following values are valid: CFR and IATA.
   * @return regulationSet
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Regulation set for DryIce Shipment.  Valid values:  CFR = For HazMat regulated by US Dept of Transportation within the U.S. or ground shipments to Canada, IATA = For Worldwide Air movement.   The following values are valid: CFR and IATA.")
  @JsonProperty(JSON_PROPERTY_REGULATION_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRegulationSet() {
    return regulationSet;
  }


  @JsonProperty(JSON_PROPERTY_REGULATION_SET)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegulationSet(String regulationSet) {
    this.regulationSet = regulationSet;
  }


  public PackageServiceOptionsDryIce dryIceWeight(DryIceDryIceWeight dryIceWeight) {
    
    this.dryIceWeight = dryIceWeight;
    return this;
  }

   /**
   * Get dryIceWeight
   * @return dryIceWeight
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DRY_ICE_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DryIceDryIceWeight getDryIceWeight() {
    return dryIceWeight;
  }


  @JsonProperty(JSON_PROPERTY_DRY_ICE_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDryIceWeight(DryIceDryIceWeight dryIceWeight) {
    this.dryIceWeight = dryIceWeight;
  }


  public PackageServiceOptionsDryIce medicalUseIndicator(String medicalUseIndicator) {
    
    this.medicalUseIndicator = medicalUseIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored. Relevant only in CFR regulation set. If present it is used to designate the Dry Ice is for any medical use and rates are adjusted for DryIce weight more than 2.5 KGS or 5.5 LBS.
   * @return medicalUseIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored. Relevant only in CFR regulation set. If present it is used to designate the Dry Ice is for any medical use and rates are adjusted for DryIce weight more than 2.5 KGS or 5.5 LBS.")
  @JsonProperty(JSON_PROPERTY_MEDICAL_USE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMedicalUseIndicator() {
    return medicalUseIndicator;
  }


  @JsonProperty(JSON_PROPERTY_MEDICAL_USE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMedicalUseIndicator(String medicalUseIndicator) {
    this.medicalUseIndicator = medicalUseIndicator;
  }


  public PackageServiceOptionsDryIce auditRequired(String auditRequired) {
    
    this.auditRequired = auditRequired;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored. Indicates a Dry Ice audit will be performed per the Regulation Set requirements. Empty tag means indicator is present.
   * @return auditRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored. Indicates a Dry Ice audit will be performed per the Regulation Set requirements. Empty tag means indicator is present.")
  @JsonProperty(JSON_PROPERTY_AUDIT_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAuditRequired() {
    return auditRequired;
  }


  @JsonProperty(JSON_PROPERTY_AUDIT_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuditRequired(String auditRequired) {
    this.auditRequired = auditRequired;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackageServiceOptionsDryIce packageServiceOptionsDryIce = (PackageServiceOptionsDryIce) o;
    return Objects.equals(this.regulationSet, packageServiceOptionsDryIce.regulationSet) &&
        Objects.equals(this.dryIceWeight, packageServiceOptionsDryIce.dryIceWeight) &&
        Objects.equals(this.medicalUseIndicator, packageServiceOptionsDryIce.medicalUseIndicator) &&
        Objects.equals(this.auditRequired, packageServiceOptionsDryIce.auditRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(regulationSet, dryIceWeight, medicalUseIndicator, auditRequired);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackageServiceOptionsDryIce {\n");
    sb.append("    regulationSet: ").append(toIndentedString(regulationSet)).append("\n");
    sb.append("    dryIceWeight: ").append(toIndentedString(dryIceWeight)).append("\n");
    sb.append("    medicalUseIndicator: ").append(toIndentedString(medicalUseIndicator)).append("\n");
    sb.append("    auditRequired: ").append(toIndentedString(auditRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

