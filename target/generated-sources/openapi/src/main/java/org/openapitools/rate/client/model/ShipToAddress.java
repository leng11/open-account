/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Address Container.  N/A
 */
@ApiModel(description = "Address Container.  N/A")
@JsonPropertyOrder({
  ShipToAddress.JSON_PROPERTY_ADDRESS_LINE,
  ShipToAddress.JSON_PROPERTY_CITY,
  ShipToAddress.JSON_PROPERTY_STATE_PROVINCE_CODE,
  ShipToAddress.JSON_PROPERTY_POSTAL_CODE,
  ShipToAddress.JSON_PROPERTY_COUNTRY_CODE,
  ShipToAddress.JSON_PROPERTY_RESIDENTIAL_ADDRESS_INDICATOR
})
@JsonTypeName("ShipTo_Address")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class ShipToAddress {
  public static final String JSON_PROPERTY_ADDRESS_LINE = "AddressLine";
  private String addressLine;

  public static final String JSON_PROPERTY_CITY = "City";
  private String city;

  public static final String JSON_PROPERTY_STATE_PROVINCE_CODE = "StateProvinceCode";
  private String stateProvinceCode;

  public static final String JSON_PROPERTY_POSTAL_CODE = "PostalCode";
  private String postalCode;

  public static final String JSON_PROPERTY_COUNTRY_CODE = "CountryCode";
  private String countryCode;

  public static final String JSON_PROPERTY_RESIDENTIAL_ADDRESS_INDICATOR = "ResidentialAddressIndicator";
  private String residentialAddressIndicator;

  public ShipToAddress() {
  }

  public ShipToAddress addressLine(String addressLine) {
    
    this.addressLine = addressLine;
    return this;
  }

   /**
   * The UPS Access Point&#39;s street address, including name and number (when applicable).  Length is not validated.
   * @return addressLine
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The UPS Access Point's street address, including name and number (when applicable).  Length is not validated.")
  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAddressLine() {
    return addressLine;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAddressLine(String addressLine) {
    this.addressLine = addressLine;
  }


  public ShipToAddress city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * UPS Access Point city.
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UPS Access Point city.")
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public ShipToAddress stateProvinceCode(String stateProvinceCode) {
    
    this.stateProvinceCode = stateProvinceCode;
    return this;
  }

   /**
   * UPS Access Point State or Province code.
   * @return stateProvinceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UPS Access Point State or Province code.")
  @JsonProperty(JSON_PROPERTY_STATE_PROVINCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStateProvinceCode() {
    return stateProvinceCode;
  }


  @JsonProperty(JSON_PROPERTY_STATE_PROVINCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStateProvinceCode(String stateProvinceCode) {
    this.stateProvinceCode = stateProvinceCode;
  }


  public ShipToAddress postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type &#x3D; 02 and type &#x3D; 03.
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postal Code for UPS accounts billing address.  Postal Code  may be present when the FRS Payment Information type = 02 and type = 03.")
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public ShipToAddress countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Country or Territory code for the  UPS accounts &amp; billing address.  Country or Territory Code is required when the FRS Payment Information type &#x3D; 02 and type&#x3D; 03.
   * @return countryCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Country or Territory code for the  UPS accounts & billing address.  Country or Territory Code is required when the FRS Payment Information type = 02 and type= 03.")
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public ShipToAddress residentialAddressIndicator(String residentialAddressIndicator) {
    
    this.residentialAddressIndicator = residentialAddressIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored.This field is a flag to indicate if the Alternate Delivery location is a residential location.  True if ResidentialAddressIndicator tag exists.  For future use.
   * @return residentialAddressIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored.This field is a flag to indicate if the Alternate Delivery location is a residential location.  True if ResidentialAddressIndicator tag exists.  For future use.")
  @JsonProperty(JSON_PROPERTY_RESIDENTIAL_ADDRESS_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResidentialAddressIndicator() {
    return residentialAddressIndicator;
  }


  @JsonProperty(JSON_PROPERTY_RESIDENTIAL_ADDRESS_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResidentialAddressIndicator(String residentialAddressIndicator) {
    this.residentialAddressIndicator = residentialAddressIndicator;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipToAddress shipToAddress = (ShipToAddress) o;
    return Objects.equals(this.addressLine, shipToAddress.addressLine) &&
        Objects.equals(this.city, shipToAddress.city) &&
        Objects.equals(this.stateProvinceCode, shipToAddress.stateProvinceCode) &&
        Objects.equals(this.postalCode, shipToAddress.postalCode) &&
        Objects.equals(this.countryCode, shipToAddress.countryCode) &&
        Objects.equals(this.residentialAddressIndicator, shipToAddress.residentialAddressIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressLine, city, stateProvinceCode, postalCode, countryCode, residentialAddressIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipToAddress {\n");
    sb.append("    addressLine: ").append(toIndentedString(addressLine)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    stateProvinceCode: ").append(toIndentedString(stateProvinceCode)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    residentialAddressIndicator: ").append(toIndentedString(residentialAddressIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

