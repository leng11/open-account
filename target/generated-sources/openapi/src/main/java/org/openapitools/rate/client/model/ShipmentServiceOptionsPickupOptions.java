/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Shipment Service Pickup Options Container.  Valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipments.
 */
@ApiModel(description = "Shipment Service Pickup Options Container.  Valid for UPS Worldwide Express Freight and UPS Worldwide Express Freight Midday shipments.")
@JsonPropertyOrder({
  ShipmentServiceOptionsPickupOptions.JSON_PROPERTY_LIFT_GATE_AT_PICKUP_INDICATOR,
  ShipmentServiceOptionsPickupOptions.JSON_PROPERTY_HOLD_FOR_PICKUP_INDICATOR
})
@JsonTypeName("ShipmentServiceOptions_PickupOptions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class ShipmentServiceOptionsPickupOptions {
  public static final String JSON_PROPERTY_LIFT_GATE_AT_PICKUP_INDICATOR = "LiftGateAtPickupIndicator";
  private String liftGateAtPickupIndicator;

  public static final String JSON_PROPERTY_HOLD_FOR_PICKUP_INDICATOR = "HoldForPickupIndicator";
  private String holdForPickupIndicator;

  public ShipmentServiceOptionsPickupOptions() {
  }

  public ShipmentServiceOptionsPickupOptions liftGateAtPickupIndicator(String liftGateAtPickupIndicator) {
    
    this.liftGateAtPickupIndicator = liftGateAtPickupIndicator;
    return this;
  }

   /**
   * The presence of the tag LiftGatePickupRequiredIndicator indicates that the shipment requires a lift gate for pickup.
   * @return liftGateAtPickupIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The presence of the tag LiftGatePickupRequiredIndicator indicates that the shipment requires a lift gate for pickup.")
  @JsonProperty(JSON_PROPERTY_LIFT_GATE_AT_PICKUP_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLiftGateAtPickupIndicator() {
    return liftGateAtPickupIndicator;
  }


  @JsonProperty(JSON_PROPERTY_LIFT_GATE_AT_PICKUP_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLiftGateAtPickupIndicator(String liftGateAtPickupIndicator) {
    this.liftGateAtPickupIndicator = liftGateAtPickupIndicator;
  }


  public ShipmentServiceOptionsPickupOptions holdForPickupIndicator(String holdForPickupIndicator) {
    
    this.holdForPickupIndicator = holdForPickupIndicator;
    return this;
  }

   /**
   * The presence of the tag HoldForPickupIndicator indicates that the user opted to hold the shipment at UPS location for pickup.
   * @return holdForPickupIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The presence of the tag HoldForPickupIndicator indicates that the user opted to hold the shipment at UPS location for pickup.")
  @JsonProperty(JSON_PROPERTY_HOLD_FOR_PICKUP_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHoldForPickupIndicator() {
    return holdForPickupIndicator;
  }


  @JsonProperty(JSON_PROPERTY_HOLD_FOR_PICKUP_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHoldForPickupIndicator(String holdForPickupIndicator) {
    this.holdForPickupIndicator = holdForPickupIndicator;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentServiceOptionsPickupOptions shipmentServiceOptionsPickupOptions = (ShipmentServiceOptionsPickupOptions) o;
    return Objects.equals(this.liftGateAtPickupIndicator, shipmentServiceOptionsPickupOptions.liftGateAtPickupIndicator) &&
        Objects.equals(this.holdForPickupIndicator, shipmentServiceOptionsPickupOptions.holdForPickupIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(liftGateAtPickupIndicator, holdForPickupIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentServiceOptionsPickupOptions {\n");
    sb.append("    liftGateAtPickupIndicator: ").append(toIndentedString(liftGateAtPickupIndicator)).append("\n");
    sb.append("    holdForPickupIndicator: ").append(toIndentedString(holdForPickupIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

