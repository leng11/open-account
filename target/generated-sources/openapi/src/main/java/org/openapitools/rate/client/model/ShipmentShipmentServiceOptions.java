/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.ShipmentServiceOptionsAccessPointCOD;
import org.openapitools.rate.client.model.ShipmentServiceOptionsCOD;
import org.openapitools.rate.client.model.ShipmentServiceOptionsDeliveryConfirmation;
import org.openapitools.rate.client.model.ShipmentServiceOptionsDeliveryOptions;
import org.openapitools.rate.client.model.ShipmentServiceOptionsImportControl;
import org.openapitools.rate.client.model.ShipmentServiceOptionsPickupOptions;
import org.openapitools.rate.client.model.ShipmentServiceOptionsRestrictedArticles;
import org.openapitools.rate.client.model.ShipmentServiceOptionsReturnService;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Shipment level Accessorials are included in this container.  N/A
 */
@ApiModel(description = "Shipment level Accessorials are included in this container.  N/A")
@JsonPropertyOrder({
  ShipmentShipmentServiceOptions.JSON_PROPERTY_SATURDAY_PICKUP_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_SATURDAY_DELIVERY_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_SUNDAY_DELIVERY_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_AVAILABLE_SERVICES_OPTION,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_ACCESS_POINT_C_O_D,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_DELIVER_TO_ADDRESSEE_ONLY_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_DIRECT_DELIVERY_ONLY_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_C_O_D,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_DELIVERY_CONFIRMATION,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_RETURN_OF_DOCUMENT_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_UP_SCARBONNEUTRAL_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_CERTIFICATE_OF_ORIGIN_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_PICKUP_OPTIONS,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_DELIVERY_OPTIONS,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_RESTRICTED_ARTICLES,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_SHIPPER_EXPORT_DECLARATION_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_COMMERCIAL_INVOICE_REMOVAL_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_IMPORT_CONTROL,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_RETURN_SERVICE,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_SD_L_SHIPMENT_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_EP_R_A_INDICATOR,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_INSIDE_DELIVERY,
  ShipmentShipmentServiceOptions.JSON_PROPERTY_ITEM_DISPOSAL_INDICATOR
})
@JsonTypeName("Shipment_ShipmentServiceOptions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class ShipmentShipmentServiceOptions {
  public static final String JSON_PROPERTY_SATURDAY_PICKUP_INDICATOR = "SaturdayPickupIndicator";
  private String saturdayPickupIndicator;

  public static final String JSON_PROPERTY_SATURDAY_DELIVERY_INDICATOR = "SaturdayDeliveryIndicator";
  private String saturdayDeliveryIndicator;

  public static final String JSON_PROPERTY_SUNDAY_DELIVERY_INDICATOR = "SundayDeliveryIndicator";
  private String sundayDeliveryIndicator;

  public static final String JSON_PROPERTY_AVAILABLE_SERVICES_OPTION = "AvailableServicesOption";
  private String availableServicesOption;

  public static final String JSON_PROPERTY_ACCESS_POINT_C_O_D = "AccessPointCOD";
  private ShipmentServiceOptionsAccessPointCOD accessPointCOD;

  public static final String JSON_PROPERTY_DELIVER_TO_ADDRESSEE_ONLY_INDICATOR = "DeliverToAddresseeOnlyIndicator";
  private String deliverToAddresseeOnlyIndicator;

  public static final String JSON_PROPERTY_DIRECT_DELIVERY_ONLY_INDICATOR = "DirectDeliveryOnlyIndicator";
  private String directDeliveryOnlyIndicator;

  public static final String JSON_PROPERTY_C_O_D = "COD";
  private ShipmentServiceOptionsCOD COD;

  public static final String JSON_PROPERTY_DELIVERY_CONFIRMATION = "DeliveryConfirmation";
  private ShipmentServiceOptionsDeliveryConfirmation deliveryConfirmation;

  public static final String JSON_PROPERTY_RETURN_OF_DOCUMENT_INDICATOR = "ReturnOfDocumentIndicator";
  private String returnOfDocumentIndicator;

  public static final String JSON_PROPERTY_UP_SCARBONNEUTRAL_INDICATOR = "UPScarbonneutralIndicator";
  private String upScarbonneutralIndicator;

  public static final String JSON_PROPERTY_CERTIFICATE_OF_ORIGIN_INDICATOR = "CertificateOfOriginIndicator";
  private String certificateOfOriginIndicator;

  public static final String JSON_PROPERTY_PICKUP_OPTIONS = "PickupOptions";
  private ShipmentServiceOptionsPickupOptions pickupOptions;

  public static final String JSON_PROPERTY_DELIVERY_OPTIONS = "DeliveryOptions";
  private ShipmentServiceOptionsDeliveryOptions deliveryOptions;

  public static final String JSON_PROPERTY_RESTRICTED_ARTICLES = "RestrictedArticles";
  private ShipmentServiceOptionsRestrictedArticles restrictedArticles;

  public static final String JSON_PROPERTY_SHIPPER_EXPORT_DECLARATION_INDICATOR = "ShipperExportDeclarationIndicator";
  private String shipperExportDeclarationIndicator;

  public static final String JSON_PROPERTY_COMMERCIAL_INVOICE_REMOVAL_INDICATOR = "CommercialInvoiceRemovalIndicator";
  private String commercialInvoiceRemovalIndicator;

  public static final String JSON_PROPERTY_IMPORT_CONTROL = "ImportControl";
  private ShipmentServiceOptionsImportControl importControl;

  public static final String JSON_PROPERTY_RETURN_SERVICE = "ReturnService";
  private ShipmentServiceOptionsReturnService returnService;

  public static final String JSON_PROPERTY_SD_L_SHIPMENT_INDICATOR = "SDLShipmentIndicator";
  private String sdLShipmentIndicator;

  public static final String JSON_PROPERTY_EP_R_A_INDICATOR = "EPRAIndicator";
  private String epRAIndicator;

  public static final String JSON_PROPERTY_INSIDE_DELIVERY = "InsideDelivery";
  private String insideDelivery;

  public static final String JSON_PROPERTY_ITEM_DISPOSAL_INDICATOR = "ItemDisposalIndicator";
  private String itemDisposalIndicator;

  public ShipmentShipmentServiceOptions() {
  }

  public ShipmentShipmentServiceOptions saturdayPickupIndicator(String saturdayPickupIndicator) {
    
    this.saturdayPickupIndicator = saturdayPickupIndicator;
    return this;
  }

   /**
   * A flag indicating if the shipment requires a Saturday pickup. True if SaturdayPickupIndicator tag exists; false otherwise. Not available for GFP rating requests.  Empty Tag.
   * @return saturdayPickupIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A flag indicating if the shipment requires a Saturday pickup. True if SaturdayPickupIndicator tag exists; false otherwise. Not available for GFP rating requests.  Empty Tag.")
  @JsonProperty(JSON_PROPERTY_SATURDAY_PICKUP_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSaturdayPickupIndicator() {
    return saturdayPickupIndicator;
  }


  @JsonProperty(JSON_PROPERTY_SATURDAY_PICKUP_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaturdayPickupIndicator(String saturdayPickupIndicator) {
    this.saturdayPickupIndicator = saturdayPickupIndicator;
  }


  public ShipmentShipmentServiceOptions saturdayDeliveryIndicator(String saturdayDeliveryIndicator) {
    
    this.saturdayDeliveryIndicator = saturdayDeliveryIndicator;
    return this;
  }

   /**
   * A flag indicating if a shipment must be delivered on a Saturday. True if SaturdayDeliveryIndicator tag exists; false otherwise  Empty Tag.
   * @return saturdayDeliveryIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A flag indicating if a shipment must be delivered on a Saturday. True if SaturdayDeliveryIndicator tag exists; false otherwise  Empty Tag.")
  @JsonProperty(JSON_PROPERTY_SATURDAY_DELIVERY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSaturdayDeliveryIndicator() {
    return saturdayDeliveryIndicator;
  }


  @JsonProperty(JSON_PROPERTY_SATURDAY_DELIVERY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaturdayDeliveryIndicator(String saturdayDeliveryIndicator) {
    this.saturdayDeliveryIndicator = saturdayDeliveryIndicator;
  }


  public ShipmentShipmentServiceOptions sundayDeliveryIndicator(String sundayDeliveryIndicator) {
    
    this.sundayDeliveryIndicator = sundayDeliveryIndicator;
    return this;
  }

   /**
   * A flag indicating if a shipment must be delivered on a Sunday. True if SundayDeliveryIndicator tag exists; false otherwise  Empty Tag.
   * @return sundayDeliveryIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A flag indicating if a shipment must be delivered on a Sunday. True if SundayDeliveryIndicator tag exists; false otherwise  Empty Tag.")
  @JsonProperty(JSON_PROPERTY_SUNDAY_DELIVERY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSundayDeliveryIndicator() {
    return sundayDeliveryIndicator;
  }


  @JsonProperty(JSON_PROPERTY_SUNDAY_DELIVERY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSundayDeliveryIndicator(String sundayDeliveryIndicator) {
    this.sundayDeliveryIndicator = sundayDeliveryIndicator;
  }


  public ShipmentShipmentServiceOptions availableServicesOption(String availableServicesOption) {
    
    this.availableServicesOption = availableServicesOption;
    return this;
  }

   /**
   * If we need diferent available services in response, this option is used for shop request option. SaturdayDeliveryIndicator/ SundayDeliveryIndicator will be ignored in that case.  Valid Values: 1- Weekday+Saturday services 2- Weekday+Sunday services 3- Weekday+Sat services+Sun services
   * @return availableServicesOption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If we need diferent available services in response, this option is used for shop request option. SaturdayDeliveryIndicator/ SundayDeliveryIndicator will be ignored in that case.  Valid Values: 1- Weekday+Saturday services 2- Weekday+Sunday services 3- Weekday+Sat services+Sun services")
  @JsonProperty(JSON_PROPERTY_AVAILABLE_SERVICES_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAvailableServicesOption() {
    return availableServicesOption;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_SERVICES_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableServicesOption(String availableServicesOption) {
    this.availableServicesOption = availableServicesOption;
  }


  public ShipmentShipmentServiceOptions accessPointCOD(ShipmentServiceOptionsAccessPointCOD accessPointCOD) {
    
    this.accessPointCOD = accessPointCOD;
    return this;
  }

   /**
   * Get accessPointCOD
   * @return accessPointCOD
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCESS_POINT_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsAccessPointCOD getAccessPointCOD() {
    return accessPointCOD;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_POINT_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessPointCOD(ShipmentServiceOptionsAccessPointCOD accessPointCOD) {
    this.accessPointCOD = accessPointCOD;
  }


  public ShipmentShipmentServiceOptions deliverToAddresseeOnlyIndicator(String deliverToAddresseeOnlyIndicator) {
    
    this.deliverToAddresseeOnlyIndicator = deliverToAddresseeOnlyIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored.   DeliverToAddresseeOnlyIndicator is shipper specified restriction that requires the addressee to be the one who takes final delivery of the \&quot;Hold For PickUp at UPS Access Point\&quot; package.    Presence of indicator means shipper restriction will apply to the shipment.  Only valid for Shipment Indication type \&quot;01 - Hold For PickUp at UPS Access Point\&quot;.
   * @return deliverToAddresseeOnlyIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored.   DeliverToAddresseeOnlyIndicator is shipper specified restriction that requires the addressee to be the one who takes final delivery of the \"Hold For PickUp at UPS Access Point\" package.    Presence of indicator means shipper restriction will apply to the shipment.  Only valid for Shipment Indication type \"01 - Hold For PickUp at UPS Access Point\".")
  @JsonProperty(JSON_PROPERTY_DELIVER_TO_ADDRESSEE_ONLY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDeliverToAddresseeOnlyIndicator() {
    return deliverToAddresseeOnlyIndicator;
  }


  @JsonProperty(JSON_PROPERTY_DELIVER_TO_ADDRESSEE_ONLY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliverToAddresseeOnlyIndicator(String deliverToAddresseeOnlyIndicator) {
    this.deliverToAddresseeOnlyIndicator = deliverToAddresseeOnlyIndicator;
  }


  public ShipmentShipmentServiceOptions directDeliveryOnlyIndicator(String directDeliveryOnlyIndicator) {
    
    this.directDeliveryOnlyIndicator = directDeliveryOnlyIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored. Direct Delivery Only (DDO) accessorial in a request would ensure that delivery is made only to the Ship To address on the shipping label.  This accessorial is not valid with Shipment Indication Types: 01 - Hold For Pickup At UPS Access Point 02 - UPS Access Point� Delivery\&quot;
   * @return directDeliveryOnlyIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored. Direct Delivery Only (DDO) accessorial in a request would ensure that delivery is made only to the Ship To address on the shipping label.  This accessorial is not valid with Shipment Indication Types: 01 - Hold For Pickup At UPS Access Point 02 - UPS Access Point� Delivery\"")
  @JsonProperty(JSON_PROPERTY_DIRECT_DELIVERY_ONLY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDirectDeliveryOnlyIndicator() {
    return directDeliveryOnlyIndicator;
  }


  @JsonProperty(JSON_PROPERTY_DIRECT_DELIVERY_ONLY_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirectDeliveryOnlyIndicator(String directDeliveryOnlyIndicator) {
    this.directDeliveryOnlyIndicator = directDeliveryOnlyIndicator;
  }


  public ShipmentShipmentServiceOptions COD(ShipmentServiceOptionsCOD COD) {
    
    this.COD = COD;
    return this;
  }

   /**
   * Get COD
   * @return COD
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsCOD getCOD() {
    return COD;
  }


  @JsonProperty(JSON_PROPERTY_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCOD(ShipmentServiceOptionsCOD COD) {
    this.COD = COD;
  }


  public ShipmentShipmentServiceOptions deliveryConfirmation(ShipmentServiceOptionsDeliveryConfirmation deliveryConfirmation) {
    
    this.deliveryConfirmation = deliveryConfirmation;
    return this;
  }

   /**
   * Get deliveryConfirmation
   * @return deliveryConfirmation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELIVERY_CONFIRMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsDeliveryConfirmation getDeliveryConfirmation() {
    return deliveryConfirmation;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_CONFIRMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryConfirmation(ShipmentServiceOptionsDeliveryConfirmation deliveryConfirmation) {
    this.deliveryConfirmation = deliveryConfirmation;
  }


  public ShipmentShipmentServiceOptions returnOfDocumentIndicator(String returnOfDocumentIndicator) {
    
    this.returnOfDocumentIndicator = returnOfDocumentIndicator;
    return this;
  }

   /**
   * Return of Documents Indicator - If the flag is present, the shipper has requested the ReturnOfDocument accessorial be added to the shipment  Valid for Poland to Poland shipment.
   * @return returnOfDocumentIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Return of Documents Indicator - If the flag is present, the shipper has requested the ReturnOfDocument accessorial be added to the shipment  Valid for Poland to Poland shipment.")
  @JsonProperty(JSON_PROPERTY_RETURN_OF_DOCUMENT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReturnOfDocumentIndicator() {
    return returnOfDocumentIndicator;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_OF_DOCUMENT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnOfDocumentIndicator(String returnOfDocumentIndicator) {
    this.returnOfDocumentIndicator = returnOfDocumentIndicator;
  }


  public ShipmentShipmentServiceOptions upScarbonneutralIndicator(String upScarbonneutralIndicator) {
    
    this.upScarbonneutralIndicator = upScarbonneutralIndicator;
    return this;
  }

   /**
   * UPS carbon neutral indicator. Indicates the shipment will be rated as carbon neutral.
   * @return upScarbonneutralIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "UPS carbon neutral indicator. Indicates the shipment will be rated as carbon neutral.")
  @JsonProperty(JSON_PROPERTY_UP_SCARBONNEUTRAL_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpScarbonneutralIndicator() {
    return upScarbonneutralIndicator;
  }


  @JsonProperty(JSON_PROPERTY_UP_SCARBONNEUTRAL_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpScarbonneutralIndicator(String upScarbonneutralIndicator) {
    this.upScarbonneutralIndicator = upScarbonneutralIndicator;
  }


  public ShipmentShipmentServiceOptions certificateOfOriginIndicator(String certificateOfOriginIndicator) {
    
    this.certificateOfOriginIndicator = certificateOfOriginIndicator;
    return this;
  }

   /**
   * The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.
   * @return certificateOfOriginIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.")
  @JsonProperty(JSON_PROPERTY_CERTIFICATE_OF_ORIGIN_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCertificateOfOriginIndicator() {
    return certificateOfOriginIndicator;
  }


  @JsonProperty(JSON_PROPERTY_CERTIFICATE_OF_ORIGIN_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCertificateOfOriginIndicator(String certificateOfOriginIndicator) {
    this.certificateOfOriginIndicator = certificateOfOriginIndicator;
  }


  public ShipmentShipmentServiceOptions pickupOptions(ShipmentServiceOptionsPickupOptions pickupOptions) {
    
    this.pickupOptions = pickupOptions;
    return this;
  }

   /**
   * Get pickupOptions
   * @return pickupOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PICKUP_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsPickupOptions getPickupOptions() {
    return pickupOptions;
  }


  @JsonProperty(JSON_PROPERTY_PICKUP_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPickupOptions(ShipmentServiceOptionsPickupOptions pickupOptions) {
    this.pickupOptions = pickupOptions;
  }


  public ShipmentShipmentServiceOptions deliveryOptions(ShipmentServiceOptionsDeliveryOptions deliveryOptions) {
    
    this.deliveryOptions = deliveryOptions;
    return this;
  }

   /**
   * Get deliveryOptions
   * @return deliveryOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELIVERY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsDeliveryOptions getDeliveryOptions() {
    return deliveryOptions;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryOptions(ShipmentServiceOptionsDeliveryOptions deliveryOptions) {
    this.deliveryOptions = deliveryOptions;
  }


  public ShipmentShipmentServiceOptions restrictedArticles(ShipmentServiceOptionsRestrictedArticles restrictedArticles) {
    
    this.restrictedArticles = restrictedArticles;
    return this;
  }

   /**
   * Get restrictedArticles
   * @return restrictedArticles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESTRICTED_ARTICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsRestrictedArticles getRestrictedArticles() {
    return restrictedArticles;
  }


  @JsonProperty(JSON_PROPERTY_RESTRICTED_ARTICLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRestrictedArticles(ShipmentServiceOptionsRestrictedArticles restrictedArticles) {
    this.restrictedArticles = restrictedArticles;
  }


  public ShipmentShipmentServiceOptions shipperExportDeclarationIndicator(String shipperExportDeclarationIndicator) {
    
    this.shipperExportDeclarationIndicator = shipperExportDeclarationIndicator;
    return this;
  }

   /**
   * The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.
   * @return shipperExportDeclarationIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The empty tag in request indicates that customer would be using UPS prepared SED form.  Valid for UPS World Wide Express Freight shipments.")
  @JsonProperty(JSON_PROPERTY_SHIPPER_EXPORT_DECLARATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShipperExportDeclarationIndicator() {
    return shipperExportDeclarationIndicator;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPER_EXPORT_DECLARATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipperExportDeclarationIndicator(String shipperExportDeclarationIndicator) {
    this.shipperExportDeclarationIndicator = shipperExportDeclarationIndicator;
  }


  public ShipmentShipmentServiceOptions commercialInvoiceRemovalIndicator(String commercialInvoiceRemovalIndicator) {
    
    this.commercialInvoiceRemovalIndicator = commercialInvoiceRemovalIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored.  CommercialInvoiceRemovalIndicator - empty tag means indicator is present.  CommercialInvoiceRemovalIndicator allows a shipper to dictate that UPS remove the Commercial Invoice from the user&#39;s shipment before the shipment is delivered to the ultimate consignee.
   * @return commercialInvoiceRemovalIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored.  CommercialInvoiceRemovalIndicator - empty tag means indicator is present.  CommercialInvoiceRemovalIndicator allows a shipper to dictate that UPS remove the Commercial Invoice from the user's shipment before the shipment is delivered to the ultimate consignee.")
  @JsonProperty(JSON_PROPERTY_COMMERCIAL_INVOICE_REMOVAL_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommercialInvoiceRemovalIndicator() {
    return commercialInvoiceRemovalIndicator;
  }


  @JsonProperty(JSON_PROPERTY_COMMERCIAL_INVOICE_REMOVAL_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommercialInvoiceRemovalIndicator(String commercialInvoiceRemovalIndicator) {
    this.commercialInvoiceRemovalIndicator = commercialInvoiceRemovalIndicator;
  }


  public ShipmentShipmentServiceOptions importControl(ShipmentServiceOptionsImportControl importControl) {
    
    this.importControl = importControl;
    return this;
  }

   /**
   * Get importControl
   * @return importControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IMPORT_CONTROL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsImportControl getImportControl() {
    return importControl;
  }


  @JsonProperty(JSON_PROPERTY_IMPORT_CONTROL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImportControl(ShipmentServiceOptionsImportControl importControl) {
    this.importControl = importControl;
  }


  public ShipmentShipmentServiceOptions returnService(ShipmentServiceOptionsReturnService returnService) {
    
    this.returnService = returnService;
    return this;
  }

   /**
   * Get returnService
   * @return returnService
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RETURN_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentServiceOptionsReturnService getReturnService() {
    return returnService;
  }


  @JsonProperty(JSON_PROPERTY_RETURN_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReturnService(ShipmentServiceOptionsReturnService returnService) {
    this.returnService = returnService;
  }


  public ShipmentShipmentServiceOptions sdLShipmentIndicator(String sdLShipmentIndicator) {
    
    this.sdLShipmentIndicator = sdLShipmentIndicator;
    return this;
  }

   /**
   * Empty Tag means the indicator is present. This field is a flag to indicate if the receiver needs SDL rates in response. True if SDLShipmentIndicator tag exists; false otherwise.  If present, the State Department License (SDL) rates will be returned in the response.  This service requires that the account number is enabled for SDL.
   * @return sdLShipmentIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Empty Tag means the indicator is present. This field is a flag to indicate if the receiver needs SDL rates in response. True if SDLShipmentIndicator tag exists; false otherwise.  If present, the State Department License (SDL) rates will be returned in the response.  This service requires that the account number is enabled for SDL.")
  @JsonProperty(JSON_PROPERTY_SD_L_SHIPMENT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSdLShipmentIndicator() {
    return sdLShipmentIndicator;
  }


  @JsonProperty(JSON_PROPERTY_SD_L_SHIPMENT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSdLShipmentIndicator(String sdLShipmentIndicator) {
    this.sdLShipmentIndicator = sdLShipmentIndicator;
  }


  public ShipmentShipmentServiceOptions epRAIndicator(String epRAIndicator) {
    
    this.epRAIndicator = epRAIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored. This field is a flag to indicate Package Release Code is requested for shipment.  This accessorial is only valid with ShipmentIndicationType �01� - Hold for Pickup at UPS Access Point�.
   * @return epRAIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored. This field is a flag to indicate Package Release Code is requested for shipment.  This accessorial is only valid with ShipmentIndicationType �01� - Hold for Pickup at UPS Access Point�.")
  @JsonProperty(JSON_PROPERTY_EP_R_A_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEpRAIndicator() {
    return epRAIndicator;
  }


  @JsonProperty(JSON_PROPERTY_EP_R_A_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEpRAIndicator(String epRAIndicator) {
    this.epRAIndicator = epRAIndicator;
  }


  public ShipmentShipmentServiceOptions insideDelivery(String insideDelivery) {
    
    this.insideDelivery = insideDelivery;
    return this;
  }

   /**
   * Inside Delivery accessory. Valide values:                                         01- White Glove                        02 - Room of Choice                   03 - Installation  Shippers account needs to have a valid contract for Heavy Goods Service.
   * @return insideDelivery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Inside Delivery accessory. Valide values:                                         01- White Glove                        02 - Room of Choice                   03 - Installation  Shippers account needs to have a valid contract for Heavy Goods Service.")
  @JsonProperty(JSON_PROPERTY_INSIDE_DELIVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInsideDelivery() {
    return insideDelivery;
  }


  @JsonProperty(JSON_PROPERTY_INSIDE_DELIVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInsideDelivery(String insideDelivery) {
    this.insideDelivery = insideDelivery;
  }


  public ShipmentShipmentServiceOptions itemDisposalIndicator(String itemDisposalIndicator) {
    
    this.itemDisposalIndicator = itemDisposalIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored. If present, indicates that the customer would like items disposed.   Shippers account needs to have a valid contract for Heavy Goods Service.
   * @return itemDisposalIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored. If present, indicates that the customer would like items disposed.   Shippers account needs to have a valid contract for Heavy Goods Service.")
  @JsonProperty(JSON_PROPERTY_ITEM_DISPOSAL_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getItemDisposalIndicator() {
    return itemDisposalIndicator;
  }


  @JsonProperty(JSON_PROPERTY_ITEM_DISPOSAL_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemDisposalIndicator(String itemDisposalIndicator) {
    this.itemDisposalIndicator = itemDisposalIndicator;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentShipmentServiceOptions shipmentShipmentServiceOptions = (ShipmentShipmentServiceOptions) o;
    return Objects.equals(this.saturdayPickupIndicator, shipmentShipmentServiceOptions.saturdayPickupIndicator) &&
        Objects.equals(this.saturdayDeliveryIndicator, shipmentShipmentServiceOptions.saturdayDeliveryIndicator) &&
        Objects.equals(this.sundayDeliveryIndicator, shipmentShipmentServiceOptions.sundayDeliveryIndicator) &&
        Objects.equals(this.availableServicesOption, shipmentShipmentServiceOptions.availableServicesOption) &&
        Objects.equals(this.accessPointCOD, shipmentShipmentServiceOptions.accessPointCOD) &&
        Objects.equals(this.deliverToAddresseeOnlyIndicator, shipmentShipmentServiceOptions.deliverToAddresseeOnlyIndicator) &&
        Objects.equals(this.directDeliveryOnlyIndicator, shipmentShipmentServiceOptions.directDeliveryOnlyIndicator) &&
        Objects.equals(this.COD, shipmentShipmentServiceOptions.COD) &&
        Objects.equals(this.deliveryConfirmation, shipmentShipmentServiceOptions.deliveryConfirmation) &&
        Objects.equals(this.returnOfDocumentIndicator, shipmentShipmentServiceOptions.returnOfDocumentIndicator) &&
        Objects.equals(this.upScarbonneutralIndicator, shipmentShipmentServiceOptions.upScarbonneutralIndicator) &&
        Objects.equals(this.certificateOfOriginIndicator, shipmentShipmentServiceOptions.certificateOfOriginIndicator) &&
        Objects.equals(this.pickupOptions, shipmentShipmentServiceOptions.pickupOptions) &&
        Objects.equals(this.deliveryOptions, shipmentShipmentServiceOptions.deliveryOptions) &&
        Objects.equals(this.restrictedArticles, shipmentShipmentServiceOptions.restrictedArticles) &&
        Objects.equals(this.shipperExportDeclarationIndicator, shipmentShipmentServiceOptions.shipperExportDeclarationIndicator) &&
        Objects.equals(this.commercialInvoiceRemovalIndicator, shipmentShipmentServiceOptions.commercialInvoiceRemovalIndicator) &&
        Objects.equals(this.importControl, shipmentShipmentServiceOptions.importControl) &&
        Objects.equals(this.returnService, shipmentShipmentServiceOptions.returnService) &&
        Objects.equals(this.sdLShipmentIndicator, shipmentShipmentServiceOptions.sdLShipmentIndicator) &&
        Objects.equals(this.epRAIndicator, shipmentShipmentServiceOptions.epRAIndicator) &&
        Objects.equals(this.insideDelivery, shipmentShipmentServiceOptions.insideDelivery) &&
        Objects.equals(this.itemDisposalIndicator, shipmentShipmentServiceOptions.itemDisposalIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(saturdayPickupIndicator, saturdayDeliveryIndicator, sundayDeliveryIndicator, availableServicesOption, accessPointCOD, deliverToAddresseeOnlyIndicator, directDeliveryOnlyIndicator, COD, deliveryConfirmation, returnOfDocumentIndicator, upScarbonneutralIndicator, certificateOfOriginIndicator, pickupOptions, deliveryOptions, restrictedArticles, shipperExportDeclarationIndicator, commercialInvoiceRemovalIndicator, importControl, returnService, sdLShipmentIndicator, epRAIndicator, insideDelivery, itemDisposalIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentShipmentServiceOptions {\n");
    sb.append("    saturdayPickupIndicator: ").append(toIndentedString(saturdayPickupIndicator)).append("\n");
    sb.append("    saturdayDeliveryIndicator: ").append(toIndentedString(saturdayDeliveryIndicator)).append("\n");
    sb.append("    sundayDeliveryIndicator: ").append(toIndentedString(sundayDeliveryIndicator)).append("\n");
    sb.append("    availableServicesOption: ").append(toIndentedString(availableServicesOption)).append("\n");
    sb.append("    accessPointCOD: ").append(toIndentedString(accessPointCOD)).append("\n");
    sb.append("    deliverToAddresseeOnlyIndicator: ").append(toIndentedString(deliverToAddresseeOnlyIndicator)).append("\n");
    sb.append("    directDeliveryOnlyIndicator: ").append(toIndentedString(directDeliveryOnlyIndicator)).append("\n");
    sb.append("    COD: ").append(toIndentedString(COD)).append("\n");
    sb.append("    deliveryConfirmation: ").append(toIndentedString(deliveryConfirmation)).append("\n");
    sb.append("    returnOfDocumentIndicator: ").append(toIndentedString(returnOfDocumentIndicator)).append("\n");
    sb.append("    upScarbonneutralIndicator: ").append(toIndentedString(upScarbonneutralIndicator)).append("\n");
    sb.append("    certificateOfOriginIndicator: ").append(toIndentedString(certificateOfOriginIndicator)).append("\n");
    sb.append("    pickupOptions: ").append(toIndentedString(pickupOptions)).append("\n");
    sb.append("    deliveryOptions: ").append(toIndentedString(deliveryOptions)).append("\n");
    sb.append("    restrictedArticles: ").append(toIndentedString(restrictedArticles)).append("\n");
    sb.append("    shipperExportDeclarationIndicator: ").append(toIndentedString(shipperExportDeclarationIndicator)).append("\n");
    sb.append("    commercialInvoiceRemovalIndicator: ").append(toIndentedString(commercialInvoiceRemovalIndicator)).append("\n");
    sb.append("    importControl: ").append(toIndentedString(importControl)).append("\n");
    sb.append("    returnService: ").append(toIndentedString(returnService)).append("\n");
    sb.append("    sdLShipmentIndicator: ").append(toIndentedString(sdLShipmentIndicator)).append("\n");
    sb.append("    epRAIndicator: ").append(toIndentedString(epRAIndicator)).append("\n");
    sb.append("    insideDelivery: ").append(toIndentedString(insideDelivery)).append("\n");
    sb.append("    itemDisposalIndicator: ").append(toIndentedString(itemDisposalIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

