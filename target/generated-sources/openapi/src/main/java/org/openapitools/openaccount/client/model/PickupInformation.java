/*
 * UPS Accounts API
 * UPS Open Account API enables UPS 3rd Party Vendors to request a UPS Shipper Account. If the UPS Shipper Account request is approved, an UPS Shipper Account Number is generated. The UPS Ready Vendor user should first complete the registration process and get a My UPS ID before requesting a Shipper Account. Addresses are validated for accuracy. The User is expected to provide the primary reason for requesting a Shipper Account and the estimated number of Packages to be shipped.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.openaccount.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * 
 */
@ApiModel(description = "")
@JsonPropertyOrder({
  PickupInformation.JSON_PROPERTY_TYPE,
  PickupInformation.JSON_PROPERTY_LOCATION,
  PickupInformation.JSON_PROPERTY_EARLIEST_PICKUP_TIME,
  PickupInformation.JSON_PROPERTY_PREFERRED_PICKUP_TIME,
  PickupInformation.JSON_PROPERTY_LATEST_PICKUP_TIME,
  PickupInformation.JSON_PROPERTY_PICKUP_START_DATE,
  PickupInformation.JSON_PROPERTY_PICKUP_DAYS,
  PickupInformation.JSON_PROPERTY_WEEKEND_DELIVERY_OPTIONS
})
@JsonTypeName("pickupInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-14T11:32:27.678763700-05:00[America/New_York]")
public class PickupInformation {
  /**
   * 01 &#x3D; Regular Daily Pickup 02 &#x3D; SMART Pickup 07 &#x3D; Daily-On Route 08 &#x3D; No Scheduled Pickup 99 &#x3D; Day Specific Pickup 
   */
  public enum TypeEnum {
    _01("01"),
    
    _02("02"),
    
    _07("07"),
    
    _08("08"),
    
    _99("99");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  /**
   * Gets or Sets location
   */
  public enum LocationEnum {
    FRONT_DOOR("Front Door"),
    
    BACK_DOOR("Back Door"),
    
    SIDE_DOOR("Side Door"),
    
    SHIPPING("Shipping"),
    
    RECEIVING("Receiving"),
    
    RECEPTION("Reception"),
    
    OFFICE("Office"),
    
    MAIL_ROOM("Mail Room"),
    
    GARAGE("Garage"),
    
    UPSTAIRS("Upstairs"),
    
    DOWNSTAIRS("Downstairs"),
    
    THIRD_PARTY("Third Party"),
    
    GUARD_ROOM("Guard Room"),
    
    WAREHOUSE("Warehouse");

    private String value;

    LocationEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LocationEnum fromValue(String value) {
      for (LocationEnum b : LocationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LOCATION = "location";
  private LocationEnum location;

  public static final String JSON_PROPERTY_EARLIEST_PICKUP_TIME = "earliestPickupTime";
  private String earliestPickupTime;

  public static final String JSON_PROPERTY_PREFERRED_PICKUP_TIME = "preferredPickupTime";
  private String preferredPickupTime;

  public static final String JSON_PROPERTY_LATEST_PICKUP_TIME = "latestPickupTime";
  private String latestPickupTime;

  public static final String JSON_PROPERTY_PICKUP_START_DATE = "pickupStartDate";
  private String pickupStartDate;

  /**
   * Gets or Sets pickupDays
   */
  public enum PickupDaysEnum {
    MONDAY("Monday"),
    
    TUESDAY("Tuesday"),
    
    WEDNESDAY("Wednesday"),
    
    THURSDAY("Thursday"),
    
    FRIDAY("Friday"),
    
    SATURDAY("Saturday");

    private String value;

    PickupDaysEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PickupDaysEnum fromValue(String value) {
      for (PickupDaysEnum b : PickupDaysEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PICKUP_DAYS = "pickupDays";
  private List<PickupDaysEnum> pickupDays = null;

  /**
   * Only used for Weekend Pickup  01 &#x3D; Saturday Eligible Commercial
   */
  public enum WeekendDeliveryOptionsEnum {
    SATURDAY_ELIGIBLE_COMMERCIAL("Saturday Eligible Commercial");

    private String value;

    WeekendDeliveryOptionsEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WeekendDeliveryOptionsEnum fromValue(String value) {
      for (WeekendDeliveryOptionsEnum b : WeekendDeliveryOptionsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WEEKEND_DELIVERY_OPTIONS = "weekendDeliveryOptions";
  private WeekendDeliveryOptionsEnum weekendDeliveryOptions;

  public PickupInformation() {
  }

  public PickupInformation type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * 01 &#x3D; Regular Daily Pickup 02 &#x3D; SMART Pickup 07 &#x3D; Daily-On Route 08 &#x3D; No Scheduled Pickup 99 &#x3D; Day Specific Pickup 
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "01 = Regular Daily Pickup 02 = SMART Pickup 07 = Daily-On Route 08 = No Scheduled Pickup 99 = Day Specific Pickup ")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PickupInformation location(LocationEnum location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Front Door", value = "")
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocationEnum getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(LocationEnum location) {
    this.location = location;
  }


  public PickupInformation earliestPickupTime(String earliestPickupTime) {
    
    this.earliestPickupTime = earliestPickupTime;
    return this;
  }

   /**
   * Format: hhmmss   e.g. 230000 for 11:00PM  Valid Values  hh: 1-23 mm: 00, 15, 30, 45 ss: 00
   * @return earliestPickupTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "121500", value = "Format: hhmmss   e.g. 230000 for 11:00PM  Valid Values  hh: 1-23 mm: 00, 15, 30, 45 ss: 00")
  @JsonProperty(JSON_PROPERTY_EARLIEST_PICKUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEarliestPickupTime() {
    return earliestPickupTime;
  }


  @JsonProperty(JSON_PROPERTY_EARLIEST_PICKUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEarliestPickupTime(String earliestPickupTime) {
    this.earliestPickupTime = earliestPickupTime;
  }


  public PickupInformation preferredPickupTime(String preferredPickupTime) {
    
    this.preferredPickupTime = preferredPickupTime;
    return this;
  }

   /**
   * Format: hhmmss   e.g. 230000 for 11:00PM  Valid Values  hh: 1-23 mm: 00, 15, 30, 45 ss: 00
   * @return preferredPickupTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "121500", value = "Format: hhmmss   e.g. 230000 for 11:00PM  Valid Values  hh: 1-23 mm: 00, 15, 30, 45 ss: 00")
  @JsonProperty(JSON_PROPERTY_PREFERRED_PICKUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPreferredPickupTime() {
    return preferredPickupTime;
  }


  @JsonProperty(JSON_PROPERTY_PREFERRED_PICKUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreferredPickupTime(String preferredPickupTime) {
    this.preferredPickupTime = preferredPickupTime;
  }


  public PickupInformation latestPickupTime(String latestPickupTime) {
    
    this.latestPickupTime = latestPickupTime;
    return this;
  }

   /**
   * Format: hhmmss   e.g. 230000 for 11:00PM  Valid Values  hh: 1-23 mm: 00, 15, 30, 45 ss: 00
   * @return latestPickupTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "121500", value = "Format: hhmmss   e.g. 230000 for 11:00PM  Valid Values  hh: 1-23 mm: 00, 15, 30, 45 ss: 00")
  @JsonProperty(JSON_PROPERTY_LATEST_PICKUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLatestPickupTime() {
    return latestPickupTime;
  }


  @JsonProperty(JSON_PROPERTY_LATEST_PICKUP_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLatestPickupTime(String latestPickupTime) {
    this.latestPickupTime = latestPickupTime;
  }


  public PickupInformation pickupStartDate(String pickupStartDate) {
    
    this.pickupStartDate = pickupStartDate;
    return this;
  }

   /**
   * YYYYMMDD Format
   * @return pickupStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "20220912", value = "YYYYMMDD Format")
  @JsonProperty(JSON_PROPERTY_PICKUP_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPickupStartDate() {
    return pickupStartDate;
  }


  @JsonProperty(JSON_PROPERTY_PICKUP_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPickupStartDate(String pickupStartDate) {
    this.pickupStartDate = pickupStartDate;
  }


  public PickupInformation pickupDays(List<PickupDaysEnum> pickupDays) {
    
    this.pickupDays = pickupDays;
    return this;
  }

  public PickupInformation addPickupDaysItem(PickupDaysEnum pickupDaysItem) {
    if (this.pickupDays == null) {
      this.pickupDays = new ArrayList<>();
    }
    this.pickupDays.add(pickupDaysItem);
    return this;
  }

   /**
   * Get pickupDays
   * @return pickupDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PICKUP_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PickupDaysEnum> getPickupDays() {
    return pickupDays;
  }


  @JsonProperty(JSON_PROPERTY_PICKUP_DAYS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPickupDays(List<PickupDaysEnum> pickupDays) {
    this.pickupDays = pickupDays;
  }


  public PickupInformation weekendDeliveryOptions(WeekendDeliveryOptionsEnum weekendDeliveryOptions) {
    
    this.weekendDeliveryOptions = weekendDeliveryOptions;
    return this;
  }

   /**
   * Only used for Weekend Pickup  01 &#x3D; Saturday Eligible Commercial
   * @return weekendDeliveryOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Saturday Eligible Commercial", value = "Only used for Weekend Pickup  01 = Saturday Eligible Commercial")
  @JsonProperty(JSON_PROPERTY_WEEKEND_DELIVERY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WeekendDeliveryOptionsEnum getWeekendDeliveryOptions() {
    return weekendDeliveryOptions;
  }


  @JsonProperty(JSON_PROPERTY_WEEKEND_DELIVERY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeekendDeliveryOptions(WeekendDeliveryOptionsEnum weekendDeliveryOptions) {
    this.weekendDeliveryOptions = weekendDeliveryOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PickupInformation pickupInformation = (PickupInformation) o;
    return Objects.equals(this.type, pickupInformation.type) &&
        Objects.equals(this.location, pickupInformation.location) &&
        Objects.equals(this.earliestPickupTime, pickupInformation.earliestPickupTime) &&
        Objects.equals(this.preferredPickupTime, pickupInformation.preferredPickupTime) &&
        Objects.equals(this.latestPickupTime, pickupInformation.latestPickupTime) &&
        Objects.equals(this.pickupStartDate, pickupInformation.pickupStartDate) &&
        Objects.equals(this.pickupDays, pickupInformation.pickupDays) &&
        Objects.equals(this.weekendDeliveryOptions, pickupInformation.weekendDeliveryOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, location, earliestPickupTime, preferredPickupTime, latestPickupTime, pickupStartDate, pickupDays, weekendDeliveryOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PickupInformation {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    earliestPickupTime: ").append(toIndentedString(earliestPickupTime)).append("\n");
    sb.append("    preferredPickupTime: ").append(toIndentedString(preferredPickupTime)).append("\n");
    sb.append("    latestPickupTime: ").append(toIndentedString(latestPickupTime)).append("\n");
    sb.append("    pickupStartDate: ").append(toIndentedString(pickupStartDate)).append("\n");
    sb.append("    pickupDays: ").append(toIndentedString(pickupDays)).append("\n");
    sb.append("    weekendDeliveryOptions: ").append(toIndentedString(weekendDeliveryOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

