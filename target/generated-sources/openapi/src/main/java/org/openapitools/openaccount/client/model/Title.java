/*
 * UPS Accounts API
 * UPS Open Account API enables UPS 3rd Party Vendors to request a UPS Shipper Account. If the UPS Shipper Account request is approved, an UPS Shipper Account Number is generated. The UPS Ready Vendor user should first complete the registration process and get a My UPS ID before requesting a Shipper Account. Addresses are validated for accuracy. The User is expected to provide the primary reason for requesting a Shipper Account and the estimated number of Packages to be shipped.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.openaccount.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Title
 */
@JsonPropertyOrder({
  Title.JSON_PROPERTY_PROFESSIONAL_TITLE,
  Title.JSON_PROPERTY_FUNCTIONAL_TITLE
})
@JsonTypeName("title")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-09T11:49:46.244314200-05:00[America/New_York]")
public class Title {
  public static final String JSON_PROPERTY_PROFESSIONAL_TITLE = "professionalTitle";
  private String professionalTitle;

  public static final String JSON_PROPERTY_FUNCTIONAL_TITLE = "functionalTitle";
  private String functionalTitle;

  public Title() {
  }

  public Title professionalTitle(String professionalTitle) {
    
    this.professionalTitle = professionalTitle;
    return this;
  }

   /**
   * Get professionalTitle
   * @return professionalTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROFESSIONAL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProfessionalTitle() {
    return professionalTitle;
  }


  @JsonProperty(JSON_PROPERTY_PROFESSIONAL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfessionalTitle(String professionalTitle) {
    this.professionalTitle = professionalTitle;
  }


  public Title functionalTitle(String functionalTitle) {
    
    this.functionalTitle = functionalTitle;
    return this;
  }

   /**
   * Get functionalTitle
   * @return functionalTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FUNCTIONAL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFunctionalTitle() {
    return functionalTitle;
  }


  @JsonProperty(JSON_PROPERTY_FUNCTIONAL_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunctionalTitle(String functionalTitle) {
    this.functionalTitle = functionalTitle;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Title title = (Title) o;
    return Objects.equals(this.professionalTitle, title.professionalTitle) &&
        Objects.equals(this.functionalTitle, title.functionalTitle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(professionalTitle, functionalTitle);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Title {\n");
    sb.append("    professionalTitle: ").append(toIndentedString(professionalTitle)).append("\n");
    sb.append("    functionalTitle: ").append(toIndentedString(functionalTitle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

