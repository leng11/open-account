/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.NegotiatedRateChargesItemizedCharges;
import org.openapitools.rate.client.model.NegotiatedRateChargesTaxCharges;
import org.openapitools.rate.client.model.NegotiatedRateChargesTotalCharge;
import org.openapitools.rate.client.model.NegotiatedRateChargesTotalChargesWithTaxes;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Negotiated Rate Charges Container.  For tiered rates and promotional discounts, if a particular shipment based on zone, origin, destination or even shipment size doesn&#39;t qualify for the existing discount then no negotiated rates container will be returned. Published rates will be the applicable rate.
 */
@ApiModel(description = "Negotiated Rate Charges Container.  For tiered rates and promotional discounts, if a particular shipment based on zone, origin, destination or even shipment size doesn't qualify for the existing discount then no negotiated rates container will be returned. Published rates will be the applicable rate.")
@JsonPropertyOrder({
  RatedShipmentNegotiatedRateCharges.JSON_PROPERTY_ITEMIZED_CHARGES,
  RatedShipmentNegotiatedRateCharges.JSON_PROPERTY_TAX_CHARGES,
  RatedShipmentNegotiatedRateCharges.JSON_PROPERTY_TOTAL_CHARGE,
  RatedShipmentNegotiatedRateCharges.JSON_PROPERTY_TOTAL_CHARGES_WITH_TAXES
})
@JsonTypeName("RatedShipment_NegotiatedRateCharges")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class RatedShipmentNegotiatedRateCharges {
  public static final String JSON_PROPERTY_ITEMIZED_CHARGES = "ItemizedCharges";
  private NegotiatedRateChargesItemizedCharges itemizedCharges;

  public static final String JSON_PROPERTY_TAX_CHARGES = "TaxCharges";
  private NegotiatedRateChargesTaxCharges taxCharges;

  public static final String JSON_PROPERTY_TOTAL_CHARGE = "TotalCharge";
  private NegotiatedRateChargesTotalCharge totalCharge;

  public static final String JSON_PROPERTY_TOTAL_CHARGES_WITH_TAXES = "TotalChargesWithTaxes";
  private NegotiatedRateChargesTotalChargesWithTaxes totalChargesWithTaxes;

  public RatedShipmentNegotiatedRateCharges() {
  }

  public RatedShipmentNegotiatedRateCharges itemizedCharges(NegotiatedRateChargesItemizedCharges itemizedCharges) {
    
    this.itemizedCharges = itemizedCharges;
    return this;
  }

   /**
   * Get itemizedCharges
   * @return itemizedCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ITEMIZED_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NegotiatedRateChargesItemizedCharges getItemizedCharges() {
    return itemizedCharges;
  }


  @JsonProperty(JSON_PROPERTY_ITEMIZED_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItemizedCharges(NegotiatedRateChargesItemizedCharges itemizedCharges) {
    this.itemizedCharges = itemizedCharges;
  }


  public RatedShipmentNegotiatedRateCharges taxCharges(NegotiatedRateChargesTaxCharges taxCharges) {
    
    this.taxCharges = taxCharges;
    return this;
  }

   /**
   * Get taxCharges
   * @return taxCharges
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TAX_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NegotiatedRateChargesTaxCharges getTaxCharges() {
    return taxCharges;
  }


  @JsonProperty(JSON_PROPERTY_TAX_CHARGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxCharges(NegotiatedRateChargesTaxCharges taxCharges) {
    this.taxCharges = taxCharges;
  }


  public RatedShipmentNegotiatedRateCharges totalCharge(NegotiatedRateChargesTotalCharge totalCharge) {
    
    this.totalCharge = totalCharge;
    return this;
  }

   /**
   * Get totalCharge
   * @return totalCharge
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_CHARGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NegotiatedRateChargesTotalCharge getTotalCharge() {
    return totalCharge;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CHARGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalCharge(NegotiatedRateChargesTotalCharge totalCharge) {
    this.totalCharge = totalCharge;
  }


  public RatedShipmentNegotiatedRateCharges totalChargesWithTaxes(NegotiatedRateChargesTotalChargesWithTaxes totalChargesWithTaxes) {
    
    this.totalChargesWithTaxes = totalChargesWithTaxes;
    return this;
  }

   /**
   * Get totalChargesWithTaxes
   * @return totalChargesWithTaxes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_CHARGES_WITH_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NegotiatedRateChargesTotalChargesWithTaxes getTotalChargesWithTaxes() {
    return totalChargesWithTaxes;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CHARGES_WITH_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalChargesWithTaxes(NegotiatedRateChargesTotalChargesWithTaxes totalChargesWithTaxes) {
    this.totalChargesWithTaxes = totalChargesWithTaxes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RatedShipmentNegotiatedRateCharges ratedShipmentNegotiatedRateCharges = (RatedShipmentNegotiatedRateCharges) o;
    return Objects.equals(this.itemizedCharges, ratedShipmentNegotiatedRateCharges.itemizedCharges) &&
        Objects.equals(this.taxCharges, ratedShipmentNegotiatedRateCharges.taxCharges) &&
        Objects.equals(this.totalCharge, ratedShipmentNegotiatedRateCharges.totalCharge) &&
        Objects.equals(this.totalChargesWithTaxes, ratedShipmentNegotiatedRateCharges.totalChargesWithTaxes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemizedCharges, taxCharges, totalCharge, totalChargesWithTaxes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RatedShipmentNegotiatedRateCharges {\n");
    sb.append("    itemizedCharges: ").append(toIndentedString(itemizedCharges)).append("\n");
    sb.append("    taxCharges: ").append(toIndentedString(taxCharges)).append("\n");
    sb.append("    totalCharge: ").append(toIndentedString(totalCharge)).append("\n");
    sb.append("    totalChargesWithTaxes: ").append(toIndentedString(totalChargesWithTaxes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

