/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.PackageCommodity;
import org.openapitools.rate.client.model.PackageDimWeight;
import org.openapitools.rate.client.model.PackageDimensions;
import org.openapitools.rate.client.model.PackagePackageServiceOptions;
import org.openapitools.rate.client.model.PackagePackageWeight;
import org.openapitools.rate.client.model.PackagePackagingType;
import org.openapitools.rate.client.model.PackageUPSPremier;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Package Container.  Only one Package allowed for Simple Rate
 */
@ApiModel(description = "Package Container.  Only one Package allowed for Simple Rate")
@JsonPropertyOrder({
  ShipmentPackage.JSON_PROPERTY_PACKAGING_TYPE,
  ShipmentPackage.JSON_PROPERTY_DIMENSIONS,
  ShipmentPackage.JSON_PROPERTY_DIM_WEIGHT,
  ShipmentPackage.JSON_PROPERTY_PACKAGE_WEIGHT,
  ShipmentPackage.JSON_PROPERTY_COMMODITY,
  ShipmentPackage.JSON_PROPERTY_LARGE_PACKAGE_INDICATOR,
  ShipmentPackage.JSON_PROPERTY_PACKAGE_SERVICE_OPTIONS,
  ShipmentPackage.JSON_PROPERTY_ADDITIONAL_HANDLING_INDICATOR,
  ShipmentPackage.JSON_PROPERTY_UP_S_PREMIER,
  ShipmentPackage.JSON_PROPERTY_OVERSIZE_INDICATOR,
  ShipmentPackage.JSON_PROPERTY_MINIMUM_BILLABLE_WEIGHT_INDICATOR
})
@JsonTypeName("Shipment_Package")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class ShipmentPackage {
  public static final String JSON_PROPERTY_PACKAGING_TYPE = "PackagingType";
  private PackagePackagingType packagingType;

  public static final String JSON_PROPERTY_DIMENSIONS = "Dimensions";
  private PackageDimensions dimensions;

  public static final String JSON_PROPERTY_DIM_WEIGHT = "DimWeight";
  private PackageDimWeight dimWeight;

  public static final String JSON_PROPERTY_PACKAGE_WEIGHT = "PackageWeight";
  private PackagePackageWeight packageWeight;

  public static final String JSON_PROPERTY_COMMODITY = "Commodity";
  private PackageCommodity commodity;

  public static final String JSON_PROPERTY_LARGE_PACKAGE_INDICATOR = "LargePackageIndicator";
  private String largePackageIndicator;

  public static final String JSON_PROPERTY_PACKAGE_SERVICE_OPTIONS = "PackageServiceOptions";
  private PackagePackageServiceOptions packageServiceOptions;

  public static final String JSON_PROPERTY_ADDITIONAL_HANDLING_INDICATOR = "AdditionalHandlingIndicator";
  private String additionalHandlingIndicator;

  public static final String JSON_PROPERTY_UP_S_PREMIER = "UPSPremier";
  private PackageUPSPremier upSPremier;

  public static final String JSON_PROPERTY_OVERSIZE_INDICATOR = "OversizeIndicator";
  private String oversizeIndicator;

  public static final String JSON_PROPERTY_MINIMUM_BILLABLE_WEIGHT_INDICATOR = "MinimumBillableWeightIndicator";
  private String minimumBillableWeightIndicator;

  public ShipmentPackage() {
  }

  public ShipmentPackage packagingType(PackagePackagingType packagingType) {
    
    this.packagingType = packagingType;
    return this;
  }

   /**
   * Get packagingType
   * @return packagingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PACKAGING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackagePackagingType getPackagingType() {
    return packagingType;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackagingType(PackagePackagingType packagingType) {
    this.packagingType = packagingType;
  }


  public ShipmentPackage dimensions(PackageDimensions dimensions) {
    
    this.dimensions = dimensions;
    return this;
  }

   /**
   * Get dimensions
   * @return dimensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageDimensions getDimensions() {
    return dimensions;
  }


  @JsonProperty(JSON_PROPERTY_DIMENSIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimensions(PackageDimensions dimensions) {
    this.dimensions = dimensions;
  }


  public ShipmentPackage dimWeight(PackageDimWeight dimWeight) {
    
    this.dimWeight = dimWeight;
    return this;
  }

   /**
   * Get dimWeight
   * @return dimWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIM_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageDimWeight getDimWeight() {
    return dimWeight;
  }


  @JsonProperty(JSON_PROPERTY_DIM_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDimWeight(PackageDimWeight dimWeight) {
    this.dimWeight = dimWeight;
  }


  public ShipmentPackage packageWeight(PackagePackageWeight packageWeight) {
    
    this.packageWeight = packageWeight;
    return this;
  }

   /**
   * Get packageWeight
   * @return packageWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PACKAGE_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackagePackageWeight getPackageWeight() {
    return packageWeight;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGE_WEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackageWeight(PackagePackageWeight packageWeight) {
    this.packageWeight = packageWeight;
  }


  public ShipmentPackage commodity(PackageCommodity commodity) {
    
    this.commodity = commodity;
    return this;
  }

   /**
   * Get commodity
   * @return commodity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMMODITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageCommodity getCommodity() {
    return commodity;
  }


  @JsonProperty(JSON_PROPERTY_COMMODITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommodity(PackageCommodity commodity) {
    this.commodity = commodity;
  }


  public ShipmentPackage largePackageIndicator(String largePackageIndicator) {
    
    this.largePackageIndicator = largePackageIndicator;
    return this;
  }

   /**
   * This element does not require a value and if one is entered it will be ignored.  If present, it indicates the shipment will be categorized as a Large Package.
   * @return largePackageIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This element does not require a value and if one is entered it will be ignored.  If present, it indicates the shipment will be categorized as a Large Package.")
  @JsonProperty(JSON_PROPERTY_LARGE_PACKAGE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLargePackageIndicator() {
    return largePackageIndicator;
  }


  @JsonProperty(JSON_PROPERTY_LARGE_PACKAGE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLargePackageIndicator(String largePackageIndicator) {
    this.largePackageIndicator = largePackageIndicator;
  }


  public ShipmentPackage packageServiceOptions(PackagePackageServiceOptions packageServiceOptions) {
    
    this.packageServiceOptions = packageServiceOptions;
    return this;
  }

   /**
   * Get packageServiceOptions
   * @return packageServiceOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PACKAGE_SERVICE_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackagePackageServiceOptions getPackageServiceOptions() {
    return packageServiceOptions;
  }


  @JsonProperty(JSON_PROPERTY_PACKAGE_SERVICE_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPackageServiceOptions(PackagePackageServiceOptions packageServiceOptions) {
    this.packageServiceOptions = packageServiceOptions;
  }


  public ShipmentPackage additionalHandlingIndicator(String additionalHandlingIndicator) {
    
    this.additionalHandlingIndicator = additionalHandlingIndicator;
    return this;
  }

   /**
   * A flag indicating if the packages require additional handling. True if AdditionalHandlingIndicator tag exists; false otherwise. Additional Handling indicator indicates it�s a non-corrugated package.  Empty Tag.
   * @return additionalHandlingIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A flag indicating if the packages require additional handling. True if AdditionalHandlingIndicator tag exists; false otherwise. Additional Handling indicator indicates it�s a non-corrugated package.  Empty Tag.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_HANDLING_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalHandlingIndicator() {
    return additionalHandlingIndicator;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_HANDLING_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalHandlingIndicator(String additionalHandlingIndicator) {
    this.additionalHandlingIndicator = additionalHandlingIndicator;
  }


  public ShipmentPackage upSPremier(PackageUPSPremier upSPremier) {
    
    this.upSPremier = upSPremier;
    return this;
  }

   /**
   * Get upSPremier
   * @return upSPremier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UP_S_PREMIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageUPSPremier getUpSPremier() {
    return upSPremier;
  }


  @JsonProperty(JSON_PROPERTY_UP_S_PREMIER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpSPremier(PackageUPSPremier upSPremier) {
    this.upSPremier = upSPremier;
  }


  public ShipmentPackage oversizeIndicator(String oversizeIndicator) {
    
    this.oversizeIndicator = oversizeIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is oversized.  Applicable for UPS Worldwide Economy DDU service
   * @return oversizeIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is oversized.  Applicable for UPS Worldwide Economy DDU service")
  @JsonProperty(JSON_PROPERTY_OVERSIZE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOversizeIndicator() {
    return oversizeIndicator;
  }


  @JsonProperty(JSON_PROPERTY_OVERSIZE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOversizeIndicator(String oversizeIndicator) {
    this.oversizeIndicator = oversizeIndicator;
  }


  public ShipmentPackage minimumBillableWeightIndicator(String minimumBillableWeightIndicator) {
    
    this.minimumBillableWeightIndicator = minimumBillableWeightIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is qualified for minimum billable weight.  Applicable for UPS Worldwide Economy DDU service
   * @return minimumBillableWeightIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value inside is ignored. It indicates if packge is qualified for minimum billable weight.  Applicable for UPS Worldwide Economy DDU service")
  @JsonProperty(JSON_PROPERTY_MINIMUM_BILLABLE_WEIGHT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMinimumBillableWeightIndicator() {
    return minimumBillableWeightIndicator;
  }


  @JsonProperty(JSON_PROPERTY_MINIMUM_BILLABLE_WEIGHT_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinimumBillableWeightIndicator(String minimumBillableWeightIndicator) {
    this.minimumBillableWeightIndicator = minimumBillableWeightIndicator;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentPackage shipmentPackage = (ShipmentPackage) o;
    return Objects.equals(this.packagingType, shipmentPackage.packagingType) &&
        Objects.equals(this.dimensions, shipmentPackage.dimensions) &&
        Objects.equals(this.dimWeight, shipmentPackage.dimWeight) &&
        Objects.equals(this.packageWeight, shipmentPackage.packageWeight) &&
        Objects.equals(this.commodity, shipmentPackage.commodity) &&
        Objects.equals(this.largePackageIndicator, shipmentPackage.largePackageIndicator) &&
        Objects.equals(this.packageServiceOptions, shipmentPackage.packageServiceOptions) &&
        Objects.equals(this.additionalHandlingIndicator, shipmentPackage.additionalHandlingIndicator) &&
        Objects.equals(this.upSPremier, shipmentPackage.upSPremier) &&
        Objects.equals(this.oversizeIndicator, shipmentPackage.oversizeIndicator) &&
        Objects.equals(this.minimumBillableWeightIndicator, shipmentPackage.minimumBillableWeightIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(packagingType, dimensions, dimWeight, packageWeight, commodity, largePackageIndicator, packageServiceOptions, additionalHandlingIndicator, upSPremier, oversizeIndicator, minimumBillableWeightIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentPackage {\n");
    sb.append("    packagingType: ").append(toIndentedString(packagingType)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    dimWeight: ").append(toIndentedString(dimWeight)).append("\n");
    sb.append("    packageWeight: ").append(toIndentedString(packageWeight)).append("\n");
    sb.append("    commodity: ").append(toIndentedString(commodity)).append("\n");
    sb.append("    largePackageIndicator: ").append(toIndentedString(largePackageIndicator)).append("\n");
    sb.append("    packageServiceOptions: ").append(toIndentedString(packageServiceOptions)).append("\n");
    sb.append("    additionalHandlingIndicator: ").append(toIndentedString(additionalHandlingIndicator)).append("\n");
    sb.append("    upSPremier: ").append(toIndentedString(upSPremier)).append("\n");
    sb.append("    oversizeIndicator: ").append(toIndentedString(oversizeIndicator)).append("\n");
    sb.append("    minimumBillableWeightIndicator: ").append(toIndentedString(minimumBillableWeightIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

