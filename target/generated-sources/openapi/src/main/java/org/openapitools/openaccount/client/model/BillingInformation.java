/*
 * UPS Accounts API
 * UPS Open Account API enables UPS 3rd Party Vendors to request a UPS Shipper Account. If the UPS Shipper Account request is approved, an UPS Shipper Account Number is generated. The UPS Ready Vendor user should first complete the registration process and get a My UPS ID before requesting a Shipper Account. Addresses are validated for accuracy. The User is expected to provide the primary reason for requesting a Shipper Account and the estimated number of Packages to be shipped.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.openaccount.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.openaccount.client.model.CustomerPreferences;
import org.openapitools.openaccount.client.model.EmailInformation;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BillingInformation
 */
@JsonPropertyOrder({
  BillingInformation.JSON_PROPERTY_ENROLLMENT_OPTION,
  BillingInformation.JSON_PROPERTY_TRANSACTION_PREFERENCE,
  BillingInformation.JSON_PROPERTY_EMAIL_RECEIPT,
  BillingInformation.JSON_PROPERTY_EMAIL
})
@JsonTypeName("billingInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-09T11:49:46.244314200-05:00[America/New_York]")
public class BillingInformation {
  /**
   * Enrollment Option for Bill My Account  01 &#x3D; Enroll to Bill My Account 02 &#x3D; Block from Bill My Account 
   */
  public enum EnrollmentOptionEnum {
    _01("01"),
    
    _02("02");

    private String value;

    EnrollmentOptionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EnrollmentOptionEnum fromValue(String value) {
      for (EnrollmentOptionEnum b : EnrollmentOptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ENROLLMENT_OPTION = "enrollmentOption";
  private EnrollmentOptionEnum enrollmentOption;

  /**
   * For Shipping bill Shippers UPS Account  01 &#x3D; Shipping Only
   */
  public enum TransactionPreferenceEnum {
    _02("02");

    private String value;

    TransactionPreferenceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TransactionPreferenceEnum fromValue(String value) {
      for (TransactionPreferenceEnum b : TransactionPreferenceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRANSACTION_PREFERENCE = "transactionPreference";
  private TransactionPreferenceEnum transactionPreference;

  public static final String JSON_PROPERTY_EMAIL_RECEIPT = "emailReceipt";
  private CustomerPreferences emailReceipt;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private EmailInformation email;

  public BillingInformation() {
  }

  public BillingInformation enrollmentOption(EnrollmentOptionEnum enrollmentOption) {
    
    this.enrollmentOption = enrollmentOption;
    return this;
  }

   /**
   * Enrollment Option for Bill My Account  01 &#x3D; Enroll to Bill My Account 02 &#x3D; Block from Bill My Account 
   * @return enrollmentOption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "01", value = "Enrollment Option for Bill My Account  01 = Enroll to Bill My Account 02 = Block from Bill My Account ")
  @JsonProperty(JSON_PROPERTY_ENROLLMENT_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EnrollmentOptionEnum getEnrollmentOption() {
    return enrollmentOption;
  }


  @JsonProperty(JSON_PROPERTY_ENROLLMENT_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnrollmentOption(EnrollmentOptionEnum enrollmentOption) {
    this.enrollmentOption = enrollmentOption;
  }


  public BillingInformation transactionPreference(TransactionPreferenceEnum transactionPreference) {
    
    this.transactionPreference = transactionPreference;
    return this;
  }

   /**
   * For Shipping bill Shippers UPS Account  01 &#x3D; Shipping Only
   * @return transactionPreference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "02", value = "For Shipping bill Shippers UPS Account  01 = Shipping Only")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionPreferenceEnum getTransactionPreference() {
    return transactionPreference;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_PREFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionPreference(TransactionPreferenceEnum transactionPreference) {
    this.transactionPreference = transactionPreference;
  }


  public BillingInformation emailReceipt(CustomerPreferences emailReceipt) {
    
    this.emailReceipt = emailReceipt;
    return this;
  }

   /**
   * Get emailReceipt
   * @return emailReceipt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EMAIL_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CustomerPreferences getEmailReceipt() {
    return emailReceipt;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_RECEIPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmailReceipt(CustomerPreferences emailReceipt) {
    this.emailReceipt = emailReceipt;
  }


  public BillingInformation email(EmailInformation email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EmailInformation getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(EmailInformation email) {
    this.email = email;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BillingInformation billingInformation = (BillingInformation) o;
    return Objects.equals(this.enrollmentOption, billingInformation.enrollmentOption) &&
        Objects.equals(this.transactionPreference, billingInformation.transactionPreference) &&
        Objects.equals(this.emailReceipt, billingInformation.emailReceipt) &&
        Objects.equals(this.email, billingInformation.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enrollmentOption, transactionPreference, emailReceipt, email);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BillingInformation {\n");
    sb.append("    enrollmentOption: ").append(toIndentedString(enrollmentOption)).append("\n");
    sb.append("    transactionPreference: ").append(toIndentedString(transactionPreference)).append("\n");
    sb.append("    emailReceipt: ").append(toIndentedString(emailReceipt)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

