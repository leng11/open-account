/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Container for the Time-In-Transit arrival information by service. This is the most accurate delivery information available via the Rating API and will reflect changes in delivery schedules due to peak business seasons or holidays.
 */
@ApiModel(description = "Container for the Time-In-Transit arrival information by service. This is the most accurate delivery information available via the Rating API and will reflect changes in delivery schedules due to peak business seasons or holidays.")
@JsonPropertyOrder({
  EstimatedArrivalArrival.JSON_PROPERTY_DATE,
  EstimatedArrivalArrival.JSON_PROPERTY_TIME
})
@JsonTypeName("EstimatedArrival_Arrival")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class EstimatedArrivalArrival {
  public static final String JSON_PROPERTY_DATE = "Date";
  private String date;

  public static final String JSON_PROPERTY_TIME = "Time";
  private String time;

  public EstimatedArrivalArrival() {
  }

  public EstimatedArrivalArrival date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Scheduled Local Delivery Date. Format: YYYYMMDD
   * @return date
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Scheduled Local Delivery Date. Format: YYYYMMDD")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDate(String date) {
    this.date = date;
  }


  public EstimatedArrivalArrival time(String time) {
    
    this.time = time;
    return this;
  }

   /**
   * The time UPS will pick up the shipment. This is commit Time. Military Time Format HHMMSS or HHMM
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The time UPS will pick up the shipment. This is commit Time. Military Time Format HHMMSS or HHMM")
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTime(String time) {
    this.time = time;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EstimatedArrivalArrival estimatedArrivalArrival = (EstimatedArrivalArrival) o;
    return Objects.equals(this.date, estimatedArrivalArrival.date) &&
        Objects.equals(this.time, estimatedArrivalArrival.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, time);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EstimatedArrivalArrival {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

