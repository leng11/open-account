/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.ShipmentChargeBillReceiver;
import org.openapitools.rate.client.model.ShipmentChargeBillShipper;
import org.openapitools.rate.client.model.ShipmentChargeBillThirdParty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Shipment charge container.  If Duty and Tax charges are applicable to a shipment and a payer is not specified, the default payer of Duty and Tax charges is Bill to Receiver. There will be no default payer of Duty and Tax charges for DDU and DDP service.
 */
@ApiModel(description = "Shipment charge container.  If Duty and Tax charges are applicable to a shipment and a payer is not specified, the default payer of Duty and Tax charges is Bill to Receiver. There will be no default payer of Duty and Tax charges for DDU and DDP service.")
@JsonPropertyOrder({
  PaymentDetailsShipmentCharge.JSON_PROPERTY_TYPE,
  PaymentDetailsShipmentCharge.JSON_PROPERTY_BILL_SHIPPER,
  PaymentDetailsShipmentCharge.JSON_PROPERTY_BILL_RECEIVER,
  PaymentDetailsShipmentCharge.JSON_PROPERTY_BILL_THIRD_PARTY,
  PaymentDetailsShipmentCharge.JSON_PROPERTY_CONSIGNEE_BILLED_INDICATOR
})
@JsonTypeName("PaymentDetails_ShipmentCharge")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class PaymentDetailsShipmentCharge {
  public static final String JSON_PROPERTY_TYPE = "Type";
  private String type;

  public static final String JSON_PROPERTY_BILL_SHIPPER = "BillShipper";
  private ShipmentChargeBillShipper billShipper;

  public static final String JSON_PROPERTY_BILL_RECEIVER = "BillReceiver";
  private ShipmentChargeBillReceiver billReceiver;

  public static final String JSON_PROPERTY_BILL_THIRD_PARTY = "BillThirdParty";
  private ShipmentChargeBillThirdParty billThirdParty;

  public static final String JSON_PROPERTY_CONSIGNEE_BILLED_INDICATOR = "ConsigneeBilledIndicator";
  private String consigneeBilledIndicator;

  public PaymentDetailsShipmentCharge() {
  }

  public PaymentDetailsShipmentCharge type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Values are 01 &#x3D; Transportation,� 02 &#x3D; Duties and Taxes
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Values are 01 = Transportation,� 02 = Duties and Taxes")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public PaymentDetailsShipmentCharge billShipper(ShipmentChargeBillShipper billShipper) {
    
    this.billShipper = billShipper;
    return this;
  }

   /**
   * Get billShipper
   * @return billShipper
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BILL_SHIPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentChargeBillShipper getBillShipper() {
    return billShipper;
  }


  @JsonProperty(JSON_PROPERTY_BILL_SHIPPER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillShipper(ShipmentChargeBillShipper billShipper) {
    this.billShipper = billShipper;
  }


  public PaymentDetailsShipmentCharge billReceiver(ShipmentChargeBillReceiver billReceiver) {
    
    this.billReceiver = billReceiver;
    return this;
  }

   /**
   * Get billReceiver
   * @return billReceiver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BILL_RECEIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentChargeBillReceiver getBillReceiver() {
    return billReceiver;
  }


  @JsonProperty(JSON_PROPERTY_BILL_RECEIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillReceiver(ShipmentChargeBillReceiver billReceiver) {
    this.billReceiver = billReceiver;
  }


  public PaymentDetailsShipmentCharge billThirdParty(ShipmentChargeBillThirdParty billThirdParty) {
    
    this.billThirdParty = billThirdParty;
    return this;
  }

   /**
   * Get billThirdParty
   * @return billThirdParty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BILL_THIRD_PARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ShipmentChargeBillThirdParty getBillThirdParty() {
    return billThirdParty;
  }


  @JsonProperty(JSON_PROPERTY_BILL_THIRD_PARTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillThirdParty(ShipmentChargeBillThirdParty billThirdParty) {
    this.billThirdParty = billThirdParty;
  }


  public PaymentDetailsShipmentCharge consigneeBilledIndicator(String consigneeBilledIndicator) {
    
    this.consigneeBilledIndicator = consigneeBilledIndicator;
    return this;
  }

   /**
   * Consignee Billing payment option indicator. The presence indicates consignee billing option is selected. The absence indicates one of the other payment options is selected.  Empty Tag. This element or its sibling element, BillShipper, BillReceiver or BillThirdParty, must be present but no more than one can be present. This billing option is valid for a shipment charge type of Transportation only. Only applies to US/PR and PR/US shipment origins and destination.
   * @return consigneeBilledIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Consignee Billing payment option indicator. The presence indicates consignee billing option is selected. The absence indicates one of the other payment options is selected.  Empty Tag. This element or its sibling element, BillShipper, BillReceiver or BillThirdParty, must be present but no more than one can be present. This billing option is valid for a shipment charge type of Transportation only. Only applies to US/PR and PR/US shipment origins and destination.")
  @JsonProperty(JSON_PROPERTY_CONSIGNEE_BILLED_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConsigneeBilledIndicator() {
    return consigneeBilledIndicator;
  }


  @JsonProperty(JSON_PROPERTY_CONSIGNEE_BILLED_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsigneeBilledIndicator(String consigneeBilledIndicator) {
    this.consigneeBilledIndicator = consigneeBilledIndicator;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentDetailsShipmentCharge paymentDetailsShipmentCharge = (PaymentDetailsShipmentCharge) o;
    return Objects.equals(this.type, paymentDetailsShipmentCharge.type) &&
        Objects.equals(this.billShipper, paymentDetailsShipmentCharge.billShipper) &&
        Objects.equals(this.billReceiver, paymentDetailsShipmentCharge.billReceiver) &&
        Objects.equals(this.billThirdParty, paymentDetailsShipmentCharge.billThirdParty) &&
        Objects.equals(this.consigneeBilledIndicator, paymentDetailsShipmentCharge.consigneeBilledIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, billShipper, billReceiver, billThirdParty, consigneeBilledIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentDetailsShipmentCharge {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    billShipper: ").append(toIndentedString(billShipper)).append("\n");
    sb.append("    billReceiver: ").append(toIndentedString(billReceiver)).append("\n");
    sb.append("    billThirdParty: ").append(toIndentedString(billThirdParty)).append("\n");
    sb.append("    consigneeBilledIndicator: ").append(toIndentedString(consigneeBilledIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

