/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.RequestTransactionReference;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Request container.  N/A
 */
@ApiModel(description = "Request container.  N/A")
@JsonPropertyOrder({
  RateRequestRequest.JSON_PROPERTY_REQUEST_OPTION,
  RateRequestRequest.JSON_PROPERTY_SUB_VERSION,
  RateRequestRequest.JSON_PROPERTY_TRANSACTION_REFERENCE
})
@JsonTypeName("RateRequest_Request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class RateRequestRequest {
  public static final String JSON_PROPERTY_REQUEST_OPTION = "RequestOption";
  private String requestOption;

  public static final String JSON_PROPERTY_SUB_VERSION = "SubVersion";
  private String subVersion;

  public static final String JSON_PROPERTY_TRANSACTION_REFERENCE = "TransactionReference";
  private RequestTransactionReference transactionReference;

  public RateRequestRequest() {
  }

  public RateRequestRequest requestOption(String requestOption) {
    
    this.requestOption = requestOption;
    return this;
  }

   /**
   * Used to define the request type.  Valid Values: Rate &#x3D; The server rates (The default Request option is Rate if a Request Option is not provided).  Shop &#x3D; The server validates the shipment, and returns rates for all UPS products from the ShipFrom to the ShipTo addresses.  Ratetimeintransit &#x3D; The server rates with transit time information Shoptimeintransit &#x3D; The server validates the shipment, and returns rates and transit times for all UPS products from the ShipFrom to the ShipTo addresses. Rate is the only valid request option for UPS Ground Freight Pricing requests.
   * @return requestOption
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Used to define the request type.  Valid Values: Rate = The server rates (The default Request option is Rate if a Request Option is not provided).  Shop = The server validates the shipment, and returns rates for all UPS products from the ShipFrom to the ShipTo addresses.  Ratetimeintransit = The server rates with transit time information Shoptimeintransit = The server validates the shipment, and returns rates and transit times for all UPS products from the ShipFrom to the ShipTo addresses. Rate is the only valid request option for UPS Ground Freight Pricing requests.")
  @JsonProperty(JSON_PROPERTY_REQUEST_OPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getRequestOption() {
    return requestOption;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_OPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequestOption(String requestOption) {
    this.requestOption = requestOption;
  }


  public RateRequestRequest subVersion(String subVersion) {
    
    this.subVersion = subVersion;
    return this;
  }

   /**
   * Indicates Rate API to display the new release features in Rate API response based on Rate release. See the What&#39;s New section for the latest Rate release. Supported values: 1601, 1607, 1701, 1707, 2108, 2205
   * @return subVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates Rate API to display the new release features in Rate API response based on Rate release. See the What's New section for the latest Rate release. Supported values: 1601, 1607, 1701, 1707, 2108, 2205")
  @JsonProperty(JSON_PROPERTY_SUB_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubVersion() {
    return subVersion;
  }


  @JsonProperty(JSON_PROPERTY_SUB_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubVersion(String subVersion) {
    this.subVersion = subVersion;
  }


  public RateRequestRequest transactionReference(RequestTransactionReference transactionReference) {
    
    this.transactionReference = transactionReference;
    return this;
  }

   /**
   * Get transactionReference
   * @return transactionReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RequestTransactionReference getTransactionReference() {
    return transactionReference;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionReference(RequestTransactionReference transactionReference) {
    this.transactionReference = transactionReference;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RateRequestRequest rateRequestRequest = (RateRequestRequest) o;
    return Objects.equals(this.requestOption, rateRequestRequest.requestOption) &&
        Objects.equals(this.subVersion, rateRequestRequest.subVersion) &&
        Objects.equals(this.transactionReference, rateRequestRequest.transactionReference);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestOption, subVersion, transactionReference);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RateRequestRequest {\n");
    sb.append("    requestOption: ").append(toIndentedString(requestOption)).append("\n");
    sb.append("    subVersion: ").append(toIndentedString(subVersion)).append("\n");
    sb.append("    transactionReference: ").append(toIndentedString(transactionReference)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

