/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.PackageServiceOptionsAccessPointCOD;
import org.openapitools.rate.client.model.PackageServiceOptionsCOD;
import org.openapitools.rate.client.model.PackageServiceOptionsDeclaredValue;
import org.openapitools.rate.client.model.PackageServiceOptionsDeliveryConfirmation;
import org.openapitools.rate.client.model.PackageServiceOptionsDryIce;
import org.openapitools.rate.client.model.PackageServiceOptionsHazMat;
import org.openapitools.rate.client.model.PackageServiceOptionsShipperDeclaredValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PackageServiceOptions container.  N/A
 */
@ApiModel(description = "PackageServiceOptions container.  N/A")
@JsonPropertyOrder({
  PackagePackageServiceOptions.JSON_PROPERTY_DELIVERY_CONFIRMATION,
  PackagePackageServiceOptions.JSON_PROPERTY_ACCESS_POINT_C_O_D,
  PackagePackageServiceOptions.JSON_PROPERTY_C_O_D,
  PackagePackageServiceOptions.JSON_PROPERTY_DECLARED_VALUE,
  PackagePackageServiceOptions.JSON_PROPERTY_SHIPPER_DECLARED_VALUE,
  PackagePackageServiceOptions.JSON_PROPERTY_SHIPPER_RELEASE_INDICATOR,
  PackagePackageServiceOptions.JSON_PROPERTY_PROACTIVE_INDICATOR,
  PackagePackageServiceOptions.JSON_PROPERTY_REFRIGERATION_INDICATOR,
  PackagePackageServiceOptions.JSON_PROPERTY_UP_S_PREMIUM_CARE_INDICATOR,
  PackagePackageServiceOptions.JSON_PROPERTY_HAZ_MAT,
  PackagePackageServiceOptions.JSON_PROPERTY_DRY_ICE
})
@JsonTypeName("Package_PackageServiceOptions")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class PackagePackageServiceOptions {
  public static final String JSON_PROPERTY_DELIVERY_CONFIRMATION = "DeliveryConfirmation";
  private PackageServiceOptionsDeliveryConfirmation deliveryConfirmation;

  public static final String JSON_PROPERTY_ACCESS_POINT_C_O_D = "AccessPointCOD";
  private PackageServiceOptionsAccessPointCOD accessPointCOD;

  public static final String JSON_PROPERTY_C_O_D = "COD";
  private PackageServiceOptionsCOD COD;

  public static final String JSON_PROPERTY_DECLARED_VALUE = "DeclaredValue";
  private PackageServiceOptionsDeclaredValue declaredValue;

  public static final String JSON_PROPERTY_SHIPPER_DECLARED_VALUE = "ShipperDeclaredValue";
  private PackageServiceOptionsShipperDeclaredValue shipperDeclaredValue;

  public static final String JSON_PROPERTY_SHIPPER_RELEASE_INDICATOR = "ShipperReleaseIndicator";
  private String shipperReleaseIndicator;

  public static final String JSON_PROPERTY_PROACTIVE_INDICATOR = "ProactiveIndicator";
  private String proactiveIndicator;

  public static final String JSON_PROPERTY_REFRIGERATION_INDICATOR = "RefrigerationIndicator";
  private String refrigerationIndicator;

  public static final String JSON_PROPERTY_UP_S_PREMIUM_CARE_INDICATOR = "UPSPremiumCareIndicator";
  private String upSPremiumCareIndicator;

  public static final String JSON_PROPERTY_HAZ_MAT = "HazMat";
  private PackageServiceOptionsHazMat hazMat;

  public static final String JSON_PROPERTY_DRY_ICE = "DryIce";
  private PackageServiceOptionsDryIce dryIce;

  public PackagePackageServiceOptions() {
  }

  public PackagePackageServiceOptions deliveryConfirmation(PackageServiceOptionsDeliveryConfirmation deliveryConfirmation) {
    
    this.deliveryConfirmation = deliveryConfirmation;
    return this;
  }

   /**
   * Get deliveryConfirmation
   * @return deliveryConfirmation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELIVERY_CONFIRMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageServiceOptionsDeliveryConfirmation getDeliveryConfirmation() {
    return deliveryConfirmation;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_CONFIRMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryConfirmation(PackageServiceOptionsDeliveryConfirmation deliveryConfirmation) {
    this.deliveryConfirmation = deliveryConfirmation;
  }


  public PackagePackageServiceOptions accessPointCOD(PackageServiceOptionsAccessPointCOD accessPointCOD) {
    
    this.accessPointCOD = accessPointCOD;
    return this;
  }

   /**
   * Get accessPointCOD
   * @return accessPointCOD
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCESS_POINT_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageServiceOptionsAccessPointCOD getAccessPointCOD() {
    return accessPointCOD;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_POINT_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessPointCOD(PackageServiceOptionsAccessPointCOD accessPointCOD) {
    this.accessPointCOD = accessPointCOD;
  }


  public PackagePackageServiceOptions COD(PackageServiceOptionsCOD COD) {
    
    this.COD = COD;
    return this;
  }

   /**
   * Get COD
   * @return COD
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageServiceOptionsCOD getCOD() {
    return COD;
  }


  @JsonProperty(JSON_PROPERTY_C_O_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCOD(PackageServiceOptionsCOD COD) {
    this.COD = COD;
  }


  public PackagePackageServiceOptions declaredValue(PackageServiceOptionsDeclaredValue declaredValue) {
    
    this.declaredValue = declaredValue;
    return this;
  }

   /**
   * Get declaredValue
   * @return declaredValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DECLARED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageServiceOptionsDeclaredValue getDeclaredValue() {
    return declaredValue;
  }


  @JsonProperty(JSON_PROPERTY_DECLARED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeclaredValue(PackageServiceOptionsDeclaredValue declaredValue) {
    this.declaredValue = declaredValue;
  }


  public PackagePackageServiceOptions shipperDeclaredValue(PackageServiceOptionsShipperDeclaredValue shipperDeclaredValue) {
    
    this.shipperDeclaredValue = shipperDeclaredValue;
    return this;
  }

   /**
   * Get shipperDeclaredValue
   * @return shipperDeclaredValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHIPPER_DECLARED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageServiceOptionsShipperDeclaredValue getShipperDeclaredValue() {
    return shipperDeclaredValue;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPER_DECLARED_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipperDeclaredValue(PackageServiceOptionsShipperDeclaredValue shipperDeclaredValue) {
    this.shipperDeclaredValue = shipperDeclaredValue;
  }


  public PackagePackageServiceOptions shipperReleaseIndicator(String shipperReleaseIndicator) {
    
    this.shipperReleaseIndicator = shipperReleaseIndicator;
    return this;
  }

   /**
   * The presence indicates that the package may be released by driver without a signature from the consignee.  Empty Tag. Only available for US50/PR to US50/PR packages without return service.
   * @return shipperReleaseIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The presence indicates that the package may be released by driver without a signature from the consignee.  Empty Tag. Only available for US50/PR to US50/PR packages without return service.")
  @JsonProperty(JSON_PROPERTY_SHIPPER_RELEASE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getShipperReleaseIndicator() {
    return shipperReleaseIndicator;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPER_RELEASE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShipperReleaseIndicator(String shipperReleaseIndicator) {
    this.shipperReleaseIndicator = shipperReleaseIndicator;
  }


  public PackagePackageServiceOptions proactiveIndicator(String proactiveIndicator) {
    
    this.proactiveIndicator = proactiveIndicator;
    return this;
  }

   /**
   * Any value associated with this element will be ignored.   If present, the package is rated for UPS Proactive Response and proactive package tracking.  Contractual accessorial for health care companies to allow package monitoring throughout the UPS system.  Shippers account needs to have valid contract for UPS Proactive Response.
   * @return proactiveIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any value associated with this element will be ignored.   If present, the package is rated for UPS Proactive Response and proactive package tracking.  Contractual accessorial for health care companies to allow package monitoring throughout the UPS system.  Shippers account needs to have valid contract for UPS Proactive Response.")
  @JsonProperty(JSON_PROPERTY_PROACTIVE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProactiveIndicator() {
    return proactiveIndicator;
  }


  @JsonProperty(JSON_PROPERTY_PROACTIVE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProactiveIndicator(String proactiveIndicator) {
    this.proactiveIndicator = proactiveIndicator;
  }


  public PackagePackageServiceOptions refrigerationIndicator(String refrigerationIndicator) {
    
    this.refrigerationIndicator = refrigerationIndicator;
    return this;
  }

   /**
   * Presence/Absence Indicator. Any value is ignored. If present, indicates that the package contains an item that needs refrigeration.  Shippers account needs to have a valid contract for Refrigeration.
   * @return refrigerationIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presence/Absence Indicator. Any value is ignored. If present, indicates that the package contains an item that needs refrigeration.  Shippers account needs to have a valid contract for Refrigeration.")
  @JsonProperty(JSON_PROPERTY_REFRIGERATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRefrigerationIndicator() {
    return refrigerationIndicator;
  }


  @JsonProperty(JSON_PROPERTY_REFRIGERATION_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRefrigerationIndicator(String refrigerationIndicator) {
    this.refrigerationIndicator = refrigerationIndicator;
  }


  public PackagePackageServiceOptions upSPremiumCareIndicator(String upSPremiumCareIndicator) {
    
    this.upSPremiumCareIndicator = upSPremiumCareIndicator;
    return this;
  }

   /**
   * An UPSPremiumCareIndicator indicates special handling is required for shipment having controlled substances.  Empty Tag means indicator is present.   Valid only for Canada to Canada movements.  Available for the following Return Services: Returns Exchange (available with a contract) Print Return Label Print and Mail Electronic Return Label Return Service Three Attempt  May be requested with following UPS services:  UPS Express� Early UPS Express UPS Express Saver UPS Standard.   Not available for packages with the following: Delivery Confirmation - Signature Required Delivery Confirmation - Adult Signature Required.
   * @return upSPremiumCareIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An UPSPremiumCareIndicator indicates special handling is required for shipment having controlled substances.  Empty Tag means indicator is present.   Valid only for Canada to Canada movements.  Available for the following Return Services: Returns Exchange (available with a contract) Print Return Label Print and Mail Electronic Return Label Return Service Three Attempt  May be requested with following UPS services:  UPS Express� Early UPS Express UPS Express Saver UPS Standard.   Not available for packages with the following: Delivery Confirmation - Signature Required Delivery Confirmation - Adult Signature Required.")
  @JsonProperty(JSON_PROPERTY_UP_S_PREMIUM_CARE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpSPremiumCareIndicator() {
    return upSPremiumCareIndicator;
  }


  @JsonProperty(JSON_PROPERTY_UP_S_PREMIUM_CARE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpSPremiumCareIndicator(String upSPremiumCareIndicator) {
    this.upSPremiumCareIndicator = upSPremiumCareIndicator;
  }


  public PackagePackageServiceOptions hazMat(PackageServiceOptionsHazMat hazMat) {
    
    this.hazMat = hazMat;
    return this;
  }

   /**
   * Get hazMat
   * @return hazMat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HAZ_MAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageServiceOptionsHazMat getHazMat() {
    return hazMat;
  }


  @JsonProperty(JSON_PROPERTY_HAZ_MAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHazMat(PackageServiceOptionsHazMat hazMat) {
    this.hazMat = hazMat;
  }


  public PackagePackageServiceOptions dryIce(PackageServiceOptionsDryIce dryIce) {
    
    this.dryIce = dryIce;
    return this;
  }

   /**
   * Get dryIce
   * @return dryIce
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DRY_ICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PackageServiceOptionsDryIce getDryIce() {
    return dryIce;
  }


  @JsonProperty(JSON_PROPERTY_DRY_ICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDryIce(PackageServiceOptionsDryIce dryIce) {
    this.dryIce = dryIce;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackagePackageServiceOptions packagePackageServiceOptions = (PackagePackageServiceOptions) o;
    return Objects.equals(this.deliveryConfirmation, packagePackageServiceOptions.deliveryConfirmation) &&
        Objects.equals(this.accessPointCOD, packagePackageServiceOptions.accessPointCOD) &&
        Objects.equals(this.COD, packagePackageServiceOptions.COD) &&
        Objects.equals(this.declaredValue, packagePackageServiceOptions.declaredValue) &&
        Objects.equals(this.shipperDeclaredValue, packagePackageServiceOptions.shipperDeclaredValue) &&
        Objects.equals(this.shipperReleaseIndicator, packagePackageServiceOptions.shipperReleaseIndicator) &&
        Objects.equals(this.proactiveIndicator, packagePackageServiceOptions.proactiveIndicator) &&
        Objects.equals(this.refrigerationIndicator, packagePackageServiceOptions.refrigerationIndicator) &&
        Objects.equals(this.upSPremiumCareIndicator, packagePackageServiceOptions.upSPremiumCareIndicator) &&
        Objects.equals(this.hazMat, packagePackageServiceOptions.hazMat) &&
        Objects.equals(this.dryIce, packagePackageServiceOptions.dryIce);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryConfirmation, accessPointCOD, COD, declaredValue, shipperDeclaredValue, shipperReleaseIndicator, proactiveIndicator, refrigerationIndicator, upSPremiumCareIndicator, hazMat, dryIce);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackagePackageServiceOptions {\n");
    sb.append("    deliveryConfirmation: ").append(toIndentedString(deliveryConfirmation)).append("\n");
    sb.append("    accessPointCOD: ").append(toIndentedString(accessPointCOD)).append("\n");
    sb.append("    COD: ").append(toIndentedString(COD)).append("\n");
    sb.append("    declaredValue: ").append(toIndentedString(declaredValue)).append("\n");
    sb.append("    shipperDeclaredValue: ").append(toIndentedString(shipperDeclaredValue)).append("\n");
    sb.append("    shipperReleaseIndicator: ").append(toIndentedString(shipperReleaseIndicator)).append("\n");
    sb.append("    proactiveIndicator: ").append(toIndentedString(proactiveIndicator)).append("\n");
    sb.append("    refrigerationIndicator: ").append(toIndentedString(refrigerationIndicator)).append("\n");
    sb.append("    upSPremiumCareIndicator: ").append(toIndentedString(upSPremiumCareIndicator)).append("\n");
    sb.append("    hazMat: ").append(toIndentedString(hazMat)).append("\n");
    sb.append("    dryIce: ").append(toIndentedString(dryIce)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

