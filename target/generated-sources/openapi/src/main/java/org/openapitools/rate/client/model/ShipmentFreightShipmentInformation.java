/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.FreightShipmentInformationFreightDensityInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Container to hold Freight Shipment information.
 */
@ApiModel(description = "Container to hold Freight Shipment information.")
@JsonPropertyOrder({
  ShipmentFreightShipmentInformation.JSON_PROPERTY_FREIGHT_DENSITY_INFO,
  ShipmentFreightShipmentInformation.JSON_PROPERTY_DENSITY_ELIGIBLE_INDICATOR
})
@JsonTypeName("Shipment_FreightShipmentInformation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T14:45:06.047821600-05:00[America/New_York]")
public class ShipmentFreightShipmentInformation {
  public static final String JSON_PROPERTY_FREIGHT_DENSITY_INFO = "FreightDensityInfo";
  private FreightShipmentInformationFreightDensityInfo freightDensityInfo;

  public static final String JSON_PROPERTY_DENSITY_ELIGIBLE_INDICATOR = "DensityEligibleIndicator";
  private String densityEligibleIndicator;

  public ShipmentFreightShipmentInformation() {
  }

  public ShipmentFreightShipmentInformation freightDensityInfo(FreightShipmentInformationFreightDensityInfo freightDensityInfo) {
    
    this.freightDensityInfo = freightDensityInfo;
    return this;
  }

   /**
   * Get freightDensityInfo
   * @return freightDensityInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FREIGHT_DENSITY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FreightShipmentInformationFreightDensityInfo getFreightDensityInfo() {
    return freightDensityInfo;
  }


  @JsonProperty(JSON_PROPERTY_FREIGHT_DENSITY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFreightDensityInfo(FreightShipmentInformationFreightDensityInfo freightDensityInfo) {
    this.freightDensityInfo = freightDensityInfo;
  }


  public ShipmentFreightShipmentInformation densityEligibleIndicator(String densityEligibleIndicator) {
    
    this.densityEligibleIndicator = densityEligibleIndicator;
    return this;
  }

   /**
   * The presence of the tag indicates that the  rate request is density based. For Density Based Rating (DBR), the customer must have DBR Contract Service.
   * @return densityEligibleIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The presence of the tag indicates that the  rate request is density based. For Density Based Rating (DBR), the customer must have DBR Contract Service.")
  @JsonProperty(JSON_PROPERTY_DENSITY_ELIGIBLE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDensityEligibleIndicator() {
    return densityEligibleIndicator;
  }


  @JsonProperty(JSON_PROPERTY_DENSITY_ELIGIBLE_INDICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDensityEligibleIndicator(String densityEligibleIndicator) {
    this.densityEligibleIndicator = densityEligibleIndicator;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentFreightShipmentInformation shipmentFreightShipmentInformation = (ShipmentFreightShipmentInformation) o;
    return Objects.equals(this.freightDensityInfo, shipmentFreightShipmentInformation.freightDensityInfo) &&
        Objects.equals(this.densityEligibleIndicator, shipmentFreightShipmentInformation.densityEligibleIndicator);
  }

  @Override
  public int hashCode() {
    return Objects.hash(freightDensityInfo, densityEligibleIndicator);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentFreightShipmentInformation {\n");
    sb.append("    freightDensityInfo: ").append(toIndentedString(freightDensityInfo)).append("\n");
    sb.append("    densityEligibleIndicator: ").append(toIndentedString(densityEligibleIndicator)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

