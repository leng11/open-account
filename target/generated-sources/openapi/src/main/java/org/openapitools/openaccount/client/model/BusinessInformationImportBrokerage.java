/*
 * UPS Accounts API
 * UPS Open Account API enables UPS 3rd Party Vendors to request a UPS Shipper Account. If the UPS Shipper Account request is approved, an UPS Shipper Account Number is generated. The UPS Ready Vendor user should first complete the registration process and get a My UPS ID before requesting a Shipper Account. Addresses are validated for accuracy. The User is expected to provide the primary reason for requesting a Shipper Account and the estimated number of Packages to be shipped.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.openaccount.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BusinessInformationImportBrokerage
 */
@JsonPropertyOrder({
  BusinessInformationImportBrokerage.JSON_PROPERTY_TYPE,
  BusinessInformationImportBrokerage.JSON_PROPERTY_NAME
})
@JsonTypeName("businessInformation_importBrokerage")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-16T16:23:57.675426900-05:00[America/New_York]")
public class BusinessInformationImportBrokerage {
  /**
   * Identifies the Shippers import brokerage  01 &#x3D; UPS 02 &#x3D; Existing Brokerage 03 &#x3D; Do not know 
   */
  public enum TypeEnum {
    _01("01"),
    
    _02("02"),
    
    _03("03");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  private TypeEnum type;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public BusinessInformationImportBrokerage() {
  }

  public BusinessInformationImportBrokerage type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Identifies the Shippers import brokerage  01 &#x3D; UPS 02 &#x3D; Existing Brokerage 03 &#x3D; Do not know 
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "02", value = "Identifies the Shippers import brokerage  01 = UPS 02 = Existing Brokerage 03 = Do not know ")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(TypeEnum type) {
    this.type = type;
  }


  public BusinessInformationImportBrokerage name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Identifies the shippers existing brokerage  01 - UPS 02 - Existing Brokerage 03 - Do not know 
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ABC Brokerage", value = "Identifies the shippers existing brokerage  01 - UPS 02 - Existing Brokerage 03 - Do not know ")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessInformationImportBrokerage businessInformationImportBrokerage = (BusinessInformationImportBrokerage) o;
    return Objects.equals(this.type, businessInformationImportBrokerage.type) &&
        Objects.equals(this.name, businessInformationImportBrokerage.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessInformationImportBrokerage {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

