/*
 * Rate
 * The Rating API is used when rating or shopping a shipment.
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.rate.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.rate.client.model.ShipmentAlternateDeliveryAddress;
import org.openapitools.rate.client.model.ShipmentDeliveryTimeInformation;
import org.openapitools.rate.client.model.ShipmentFRSPaymentInformation;
import org.openapitools.rate.client.model.ShipmentFreightShipmentInformation;
import org.openapitools.rate.client.model.ShipmentInvoiceLineTotal;
import org.openapitools.rate.client.model.ShipmentPromotionalDiscountInformation;
import org.openapitools.rate.client.model.ShipmentService;
import org.openapitools.rate.client.model.ShipmentShipFrom;
import org.openapitools.rate.client.model.ShipmentShipTo;
import org.openapitools.rate.client.model.ShipmentShipmentIndicationType;
import org.openapitools.rate.client.model.ShipmentShipmentRatingOptions;
import org.openapitools.rate.client.model.ShipmentShipmentServiceOptions;
import org.openapitools.rate.client.model.ShipmentShipmentTotalWeight;
import org.openapitools.rate.client.model.ShipmentShipper;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for RateRequestShipment
 */
public class RateRequestShipmentTest {
    private final RateRequestShipment model = new RateRequestShipment();

    /**
     * Model tests for RateRequestShipment
     */
    @Test
    public void testRateRequestShipment() {
        // TODO: test RateRequestShipment
    }

    /**
     * Test the property 'originRecordTransactionTimestamp'
     */
    @Test
    public void originRecordTransactionTimestampTest() {
        // TODO: test originRecordTransactionTimestamp
    }

    /**
     * Test the property 'shipper'
     */
    @Test
    public void shipperTest() {
        // TODO: test shipper
    }

    /**
     * Test the property 'shipTo'
     */
    @Test
    public void shipToTest() {
        // TODO: test shipTo
    }

    /**
     * Test the property 'shipFrom'
     */
    @Test
    public void shipFromTest() {
        // TODO: test shipFrom
    }

    /**
     * Test the property 'alternateDeliveryAddress'
     */
    @Test
    public void alternateDeliveryAddressTest() {
        // TODO: test alternateDeliveryAddress
    }

    /**
     * Test the property 'shipmentIndicationType'
     */
    @Test
    public void shipmentIndicationTypeTest() {
        // TODO: test shipmentIndicationType
    }

    /**
     * Test the property 'paymentDetails'
     */
    @Test
    public void paymentDetailsTest() {
        // TODO: test paymentDetails
    }

    /**
     * Test the property 'frSPaymentInformation'
     */
    @Test
    public void frSPaymentInformationTest() {
        // TODO: test frSPaymentInformation
    }

    /**
     * Test the property 'freightShipmentInformation'
     */
    @Test
    public void freightShipmentInformationTest() {
        // TODO: test freightShipmentInformation
    }

    /**
     * Test the property 'goodsNotInFreeCirculationIndicator'
     */
    @Test
    public void goodsNotInFreeCirculationIndicatorTest() {
        // TODO: test goodsNotInFreeCirculationIndicator
    }

    /**
     * Test the property 'service'
     */
    @Test
    public void serviceTest() {
        // TODO: test service
    }

    /**
     * Test the property 'numOfPieces'
     */
    @Test
    public void numOfPiecesTest() {
        // TODO: test numOfPieces
    }

    /**
     * Test the property 'shipmentTotalWeight'
     */
    @Test
    public void shipmentTotalWeightTest() {
        // TODO: test shipmentTotalWeight
    }

    /**
     * Test the property 'documentsOnlyIndicator'
     */
    @Test
    public void documentsOnlyIndicatorTest() {
        // TODO: test documentsOnlyIndicator
    }

    /**
     * Test the property '_package'
     */
    @Test
    public void _packageTest() {
        // TODO: test _package
    }

    /**
     * Test the property 'shipmentServiceOptions'
     */
    @Test
    public void shipmentServiceOptionsTest() {
        // TODO: test shipmentServiceOptions
    }

    /**
     * Test the property 'shipmentRatingOptions'
     */
    @Test
    public void shipmentRatingOptionsTest() {
        // TODO: test shipmentRatingOptions
    }

    /**
     * Test the property 'invoiceLineTotal'
     */
    @Test
    public void invoiceLineTotalTest() {
        // TODO: test invoiceLineTotal
    }

    /**
     * Test the property 'ratingMethodRequestedIndicator'
     */
    @Test
    public void ratingMethodRequestedIndicatorTest() {
        // TODO: test ratingMethodRequestedIndicator
    }

    /**
     * Test the property 'taxInformationIndicator'
     */
    @Test
    public void taxInformationIndicatorTest() {
        // TODO: test taxInformationIndicator
    }

    /**
     * Test the property 'promotionalDiscountInformation'
     */
    @Test
    public void promotionalDiscountInformationTest() {
        // TODO: test promotionalDiscountInformation
    }

    /**
     * Test the property 'deliveryTimeInformation'
     */
    @Test
    public void deliveryTimeInformationTest() {
        // TODO: test deliveryTimeInformation
    }

    /**
     * Test the property 'masterCartonIndicator'
     */
    @Test
    public void masterCartonIndicatorTest() {
        // TODO: test masterCartonIndicator
    }

    /**
     * Test the property 'wwEShipmentIndicator'
     */
    @Test
    public void wwEShipmentIndicatorTest() {
        // TODO: test wwEShipmentIndicator
    }

}
